{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "bytesToBytes32",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "result",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "parentHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "sha3Uncles",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "miner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "transactionsRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "receiptsRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "logsBloom",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "difficulty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasUsed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "mixHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "totalDifficulty",
              "type": "uint256"
            }
          ],
          "internalType": "struct EthereumDecoder.BlockHeader",
          "name": "header",
          "type": "tuple"
        }
      ],
      "name": "getBlockHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "parentHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "sha3Uncles",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "miner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "transactionsRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "receiptsRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "logsBloom",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "difficulty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasUsed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "mixHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "totalDifficulty",
              "type": "uint256"
            }
          ],
          "internalType": "struct EthereumDecoder.BlockHeader",
          "name": "header",
          "type": "tuple"
        }
      ],
      "name": "getBlockRlpData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signedTransaction",
          "type": "bytes"
        }
      ],
      "name": "getTransactionHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "toAccount",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "storageRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "codeHash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct EthereumDecoder.Account",
          "name": "account",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "toBlockHeader",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "parentHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "sha3Uncles",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "miner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "transactionsRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "receiptsRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "logsBloom",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "difficulty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasUsed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "mixHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "totalDifficulty",
              "type": "uint256"
            }
          ],
          "internalType": "struct EthereumDecoder.BlockHeader",
          "name": "header",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "parentHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "sha3Uncles",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "miner",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "transactionsRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "receiptsRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "logsBloom",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "difficulty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "number",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasUsed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "mixHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "totalDifficulty",
              "type": "uint256"
            }
          ],
          "internalType": "struct EthereumDecoder.BlockHeader",
          "name": "header",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "expectedRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            },
            {
              "internalType": "bytes[]",
              "name": "proof",
              "type": "bytes[]"
            },
            {
              "internalType": "uint256",
              "name": "keyIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "proofIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "expectedValue",
              "type": "bytes"
            }
          ],
          "internalType": "struct MPT.MerkleProof",
          "name": "accountdata",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "codeHash",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "storageHash",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "verifyAccount",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "expectedRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "key",
              "type": "bytes"
            },
            {
              "internalType": "bytes[]",
              "name": "proof",
              "type": "bytes[]"
            },
            {
              "internalType": "uint256",
              "name": "keyIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "proofIndex",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "expectedValue",
              "type": "bytes"
            }
          ],
          "internalType": "struct MPT.MerkleProof",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "verifyTrieProof",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50612ae8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b3dd6a0a1161005b578063b3dd6a0a14610114578063bfe370d91461015a578063d76f7f0d1461016f578063e7617bf81461018f57600080fd5b80634d11c6f61461008d57806355eff580146100b7578063895308fa146100da578063a2deadbd146100fb575b600080fd5b6100a061009b3660046125ad565b6101af565b6040516100ae929190612682565b60405180910390f35b6100ca6100c53660046126a5565b6103d6565b60405190151581526020016100ae565b6100ed6100e83660046126d9565b6103e7565b6040519081526020016100ae565b6100ed61010936600461270d565b805160209091012090565b61012761012236600461270d565b610400565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b6100ed61016836600461270d565b6020015190565b61018261017d3660046126d9565b61042d565b6040516100ae9190612741565b6101a261019d36600461270d565b610438565b6040516100ae9190612754565b60408051600480825260a082019092526000916060918391816020015b60608152602001906001900390816101cc5790505090506101ed6000610449565b816000815181106102005761020061286e565b602002602001018190525061021487610449565b816001815181106102275761022761286e565b602002602001018190525061023b86610449565b8160028151811061024e5761024e61286e565b602002602001018190525061026285610449565b816003815181106102755761027561286e565b6020908102919091010152875160808a0151146102b1576000604051806060016040528060248152602001612a406024913992509250506103cb565b8760a00151805190602001206102c68261045c565b80519060200120146102f7576000604051806060016040528060268152602001612a8d6026913992509250506103cb565b6040516bffffffffffffffffffffffff19606086901b1660208201526034016040516020818303038152906040528051906020012061033c6101688a60200151610487565b14610366576000604051806060016040528060298152602001612a646029913992509250506103cb565b61036f886104e6565b9250826103b557505060408051808201909152601d81527f7665726966794163636f756e74202d20696e76616c69642070726f6f660000006020820152600091506103cb565b5050604080516020810190915260008152600191505b965096945050505050565b60006103e1826104e6565b92915050565b60006103f28261042d565b805190602001209050919050565b6040805160808101825260008082526020820181905291810182905260608101919091526103e1826106b7565b60606103e18261079e565b610440612180565b6103e182610ae8565b60606103e161045783610d21565b610e5b565b6060600061046983610eab565b905061048061047a825160c0610fde565b82611195565b9392505050565b604051815160005b818110156104c8578060200184015160f01c610f001660041c60108260200186015160f01c06018160011c60200184015360020161048f565b5060029004808252601f19601f909101168101602001604052919050565b60008082604001518360800151815181106105035761050361286e565b60200260200101519050600061052061051b83611212565b61123f565b9050836060015160000361059d57835182516020840120146105985760405162461bcd60e51b815260206004820152602660248201527f7665726966795472696550726f6f6620726f6f74206e6f6465206861736820696044820152651b9d985b1a5960d21b60648201526084015b60405180910390fd5b610657565b60208251101561060a5760006105ba6105b5836112ee565b61138e565b855190915081146106045760405162461bcd60e51b81526020600482015260146024820152733b32b934b33caa3934b2a83937b7b3101e10199960611b604482015260640161058f565b50610657565b835182516020840120146106575760405162461bcd60e51b81526020600482015260146024820152737665726966795472696550726f6f6620656c736560601b604482015260640161058f565b6000610666826000015161144a565b90508060110361068257610679856114cf565b95945050505050565b8060020361069457610679828661161b565b8460a00151516000036106ac57506001949350505050565b506000949350505050565b6040805160808101825260008082526020820181905291810182905260608101829052906106e761051b84611212565b905060005b6106f5826118e9565b1561079757806000036107155761070e6105b5836112ee565b8352610785565b80600103610733576107296105b5836112ee565b6020840152610785565b806002036107595761074f61016861074a846112ee565b61190d565b6040840152610785565b8060030361077a5761077061016861074a846112ee565b6060840152610785565b610783826112ee565b505b8061078f8161289a565b9150506106ec565b5050919050565b60408051600f808252610200820190925260609160009190816020015b60608152602001906001900390816107bb57905050905061080083602001516040516020016107ec91815260200190565b604051602081830303815290604052610e5b565b816000815181106108135761081361286e565b602002602001018190525061083883604001516040516020016107ec91815260200190565b8160018151811061084b5761084b61286e565b602002602001018190525061086383606001516119f6565b816002815181106108765761087661286e565b602002602001018190525061089b83608001516040516020016107ec91815260200190565b816003815181106108ae576108ae61286e565b60200260200101819052506108d38360a001516040516020016107ec91815260200190565b816004815181106108e6576108e661286e565b602002602001018190525061090b8360c001516040516020016107ec91815260200190565b8160058151811061091e5761091e61286e565b60200260200101819052506109368360e00151610e5b565b816006815181106109495761094961286e565b6020026020010181905250610962836101000151610449565b816007815181106109755761097561286e565b602002602001018190525061098e836101200151610449565b816008815181106109a1576109a161286e565b60200260200101819052506109ba836101400151610449565b816009815181106109cd576109cd61286e565b60200260200101819052506109e6836101600151610449565b81600a815181106109f9576109f961286e565b6020026020010181905250610a12836101800151610449565b81600b81518110610a2557610a2561286e565b6020026020010181905250610a3e836101a00151610e5b565b81600c81518110610a5157610a5161286e565b6020026020010181905250610a77836101c001516040516020016107ec91815260200190565b81600d81518110610a8a57610a8a61286e565b6020026020010181905250610ac1836101e001516040516020016107ec919060c09190911b6001600160c01b031916815260080190565b81600e81518110610ad457610ad461286e565b60200260200101819052506104808161045c565b610af0612180565b6000610afe61051b84611212565b905060005b610b0c826118e9565b15610d0f5780600003610b2f57610b256105b5836112ee565b6020840152610cfd565b80600103610b4d57610b436105b5836112ee565b6040840152610cfd565b80600203610b7957610b66610b61836112ee565b611a19565b6001600160a01b03166060840152610cfd565b80600303610b9757610b8d6105b5836112ee565b6080840152610cfd565b80600403610bb557610bab6105b5836112ee565b60a0840152610cfd565b80600503610bd357610bc96105b5836112ee565b60c0840152610cfd565b80600603610bf157610be761074a836112ee565b60e0840152610cfd565b80600703610c1057610c056105b5836112ee565b610100840152610cfd565b80600803610c2f57610c246105b5836112ee565b610120840152610cfd565b80600903610c4e57610c436105b5836112ee565b610140840152610cfd565b80600a03610c6d57610c626105b5836112ee565b610160840152610cfd565b80600b03610c8c57610c816105b5836112ee565b610180840152610cfd565b80600c03610cab57610ca061074a836112ee565b6101a0840152610cfd565b80600d03610cca57610cbf6105b5836112ee565b6101c0840152610cfd565b80600e03610cf257610cde6105b5836112ee565b6001600160401b03166101e0840152610cfd565b610cfb826112ee565b505b80610d078161289a565b915050610b03565b50508151602090920191909120815290565b6040805160208082528183019092526060916000919060208201818036833701905050905082602082015260005b6020811015610d9257818181518110610d6a57610d6a61286e565b01602001516001600160f81b031916600003610d925780610d8a8161289a565b915050610d4f565b6000610d9f8260206128b3565b6001600160401b03811115610db657610db661220b565b6040519080825280601f01601f191660200182016040528015610de0576020820181803683370190505b50905060005b8151811015610e52578383610dfa8161289a565b945081518110610e0c57610e0c61286e565b602001015160f81c60f81b828281518110610e2957610e2961286e565b60200101906001600160f81b031916908160001a90535080610e4a8161289a565b915050610de6565b50949350505050565b60608082516001148015610e8a5750608083600081518110610e7f57610e7f61286e565b016020015160f81c11155b15610e965750816103e1565b610480610ea584516080610fde565b84611195565b60608151600003610ecf5760408051600080825260208201909252905b5092915050565b6000805b8351811015610f1657838181518110610eee57610eee61286e565b60200260200101515182610f0291906128c6565b915080610f0e8161289a565b915050610ed3565b6000826001600160401b03811115610f3057610f3061220b565b6040519080825280601f01601f191660200182016040528015610f5a576020820181803683370190505b50600092509050602081015b8551831015610e52576000868481518110610f8357610f8361286e565b602002602001015190506000602082019050610fa183828451611a82565b878581518110610fb357610fb361286e565b60200260200101515183610fc791906128c6565b925050508280610fd69061289a565b935050610f66565b6060806038841015611048576040805160018082528183019092529060208201818036833701905050905061101383856128c6565b601f1a60f81b8160008151811061102c5761102c61286e565b60200101906001600160f81b031916908160001a905350610480565b600060015b61105781876128ef565b1561107d57816110668161289a565b9250611076905061010082612903565b905061104d565b6110888260016128c6565b6001600160401b0381111561109f5761109f61220b565b6040519080825280601f01601f1916602001820160405280156110c9576020820181803683370190505b5092506110d685836128c6565b6110e19060376128c6565b601f1a60f81b836000815181106110fa576110fa61286e565b60200101906001600160f81b031916908160001a905350600190505b81811161118b5761010061112a82846128b3565b61113690610100612a06565b61114090886128ef565b61114a9190612a12565b601f1a60f81b8382815181106111625761116261286e565b60200101906001600160f81b031916908160001a905350806111838161289a565b915050611116565b5050905092915050565b6060806040519050835180825260208201818101602087015b818310156111c65780518352602092830192016111ae565b50855184518101855292509050808201602086015b818310156111f35780518352602092830192016111db565b508651929092011591909101601f01601f191660405250905092915050565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b604080516080810182526000918101828152606082018390528152602081019190915261126b82611afa565b6112b75760405162461bcd60e51b815260206004820152601f60248201527f524c504465636f646572206974657261746f72206973206e6f74206c69737400604482015260640161058f565b60006112c68360200151611b35565b83602001516112d591906128c6565b6040805180820190915293845260208401525090919050565b604080518082019091526000808252602082015261130b826118e9565b6113575760405162461bcd60e51b815260206004820152601f60248201527f524c504465636f646572206974657261746f7220686173206e6f206e65787400604482015260640161058f565b6020820151600061136782611bb0565b905061137381836128c6565b60209485015260408051808201909152908152928301525090565b8051600090158015906113a357508151602110155b6113ef5760405162461bcd60e51b815260206004820181905260248201527f524c504465636f64657220746f55696e7420696e76616c6964206c656e677468604482015260640161058f565b60006113fe8360200151611b35565b9050600081846000015161141291906128b3565b905060008083866020015161142791906128c6565b9050805191506020831015610e5257506020919091036101000a90049392505050565b8051600090810361145d57506000919050565b60008061146d8460200151611b35565b846020015161147c91906128c6565b905060008460000151856020015161149491906128c6565b90505b808210156114c6576114a882611bb0565b6114b290836128c6565b9150826114be8161289a565b935050611497565b50909392505050565b60008082604001518360800151815181106114ec576114ec61286e565b6020026020010151905082602001515183606001511061156657600061153b61151c61151784611212565b611c54565b60108151811061152e5761152e61286e565b602002602001015161190d565b90508360a0015180519060200120818051906020012003611560575060019392505050565b506115fc565b600083602001518460600151815181106115825761158261286e565b016020015160f81c905060006115ae61159d61151785611212565b838151811061152e5761152e61286e565b905080516000146115f95760208101518552606085018051600191906115d59083906128c6565b905250608085018051600191906115ed9083906128c6565b905250610679856104e6565b50505b8260a00151516000036116125750600192915050565b50600092915050565b60008061162a61074a856112ee565b9050600061163a61074a866112ee565b602083015190915060fc1c60028190036116fb5760006001845161165e91906128b3565b90506000611670856001846000611db6565b9050600061168988602001518960600151856000611db6565b905084805190602001208860a0015180519060200120036116f35780805190602001208280519060200120036116c857600196505050505050506103e1565b805160208201206116d883611e9a565b80519060200120036116f357600196505050505050506103e1565b5050506118c4565b806003036117ad57600061171484600086516001611db6565b60208701516060880151815192935060009261173e9291906117379082906128b3565b6000611db6565b905083805190602001208760a0015180519060200120036117a657808051906020012082805190602001200361177c576001955050505050506103e1565b8051602082012061178c83611fd1565b80519060200120036117a6576001955050505050506103e1565b50506118c4565b80600003611873576000600184516117c591906128b3565b905060006117d7856001846000611db6565b905060006117f088602001518960600151856000611db6565b905080805190602001208280519060200120148061182257508051602082012061181983611e9a565b80519060200120145b156116f357602085015188526060880180518491906118429083906128c6565b9052506080880180516001919061185a9083906128c6565b905250611866886104e6565b96505050505050506103e1565b8060010361188c57825160006117d78582846001611db6565b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015260640161058f565b8460a00151516000036118dd57600193505050506103e1565b600093505050506103e1565b805180516020820151600092916118ff916128c6565b836020015110915050919050565b80516060906119685760405162461bcd60e51b815260206004820152602160248201527f524c504465636f64657220746f427974657320696e76616c6964206c656e67746044820152600d60fb1b606482015260840161058f565b60006119778360200151611b35565b9050600081846000015161198b91906128b3565b90506000816001600160401b038111156119a7576119a761220b565b6040519080825280601f01601f1916602001820160405280156119d1576020820181803683370190505b5090506000816020019050610e528487602001516119ef91906128c6565b8285612132565b60408051600560a21b831860148201526034810190915260609061048081610e5b565b8051600090601514611a795760405162461bcd60e51b815260206004820152602360248201527f524c504465636f64657220746f4164647265737320696e76616c6964206c656e6044820152620cee8d60eb1b606482015260840161058f565b6103e18261138e565b8282825b60208110611abe5781518352611a9d6020846128c6565b9250611aaa6020836128c6565b9150611ab76020826128b3565b9050611a86565b60006001611acd8360206128b3565b611ad990610100612a06565b611ae391906128b3565b925184518416931916929092179092525050505050565b80516000908103611b0d57506000919050565b6020820151805160001a9060c0821015611b2b575060009392505050565b5060019392505050565b8051600090811a6080811015611b4e5750600092915050565b60b8811080611b69575060c08110801590611b69575060f881105b15611b775750600192915050565b60c0811015611ba457611b8c600160b8612a26565b611b999060ff16826128b3565b6104809060016128c6565b611b8c600160f8612a26565b80516000908190811a6080811015611bcb5760019150610ec8565b60b8811015611bf157611bdf6080826128b3565b611bea9060016128c6565b9150610ec8565b60c0811015611c1e5760b78103600185019450806020036101000a85510460018201810193505050610ec8565b60f8811015611c3257611bdf60c0826128b3565b60019390930151602084900360f7016101000a900490920160f5190192915050565b6060611c5f82611afa565b611cb55760405162461bcd60e51b815260206004820152602160248201527f524c504465636f646572206974657261746f72206973206e6f742061206c69736044820152601d60fa1b606482015260840161058f565b6000611cc08361144a565b90506000816001600160401b03811115611cdc57611cdc61220b565b604051908082528060200260200182016040528015611d2157816020015b6040805180820190915260008082526020820152815260200190600190039081611cfa5790505b5090506000611d338560200151611b35565b8560200151611d4291906128c6565b90506000805b84811015611dab57611d5983611bb0565b9150604051806040016040528083815260200184815250848281518110611d8257611d8261286e565b6020908102919091010152611d9782846128c6565b925080611da38161289a565b915050611d48565b509195945050505050565b60606000611dc56020856128ef565b90506000611dd4602086612a12565b611ddf906008612903565b611deb906101006128b3565b9050602060008080886001600160401b03811115611e0b57611e0b61220b565b6040519080825280601f01601f191660200182016040528015611e35576020820181803683370190505b5090508a8a0191508715611e5f57818401516001600160fc1b031681850152602090930192600192505b825b86811015611e7f578285015182860152602090940193600101611e61565b5083820151851c851b84820152505050505050949350505050565b6060600082516002611eac9190612903565b90506000816001600160401b03811115611ec857611ec861220b565b6040519080825280601f01601f191660200182016040528015611ef2576020820181803683370190505b50905060005b8451811015611fc957600080611f3c878481518110611f1957611f1961286e565b01602001516001600160f81b031916600481901c916001600160fc1b0390911690565b90925090508184611f4e856002612903565b81518110611f5e57611f5e61286e565b60200101906001600160f81b031916908160001a9053508084611f82856002612903565b611f8d9060016128c6565b81518110611f9d57611f9d61286e565b60200101906001600160f81b031916908160001a90535050508080611fc19061289a565b915050611ef8565b509392505050565b60606000600183516002611fe59190612903565b611fef91906128b3565b90506000816001600160401b0381111561200b5761200b61220b565b6040519080825280601f01601f191660200182016040528015612035576020820181803683370190505b5090508360008151811061204b5761204b61286e565b602001015160f81c60f81b816000815181106120695761206961286e565b60200101906001600160f81b031916908160001a90535060015b8451811015611fc9576000806120a4878481518110611f1957611f1961286e565b9092509050818460016120b8866002612903565b6120c291906128b3565b815181106120d2576120d261286e565b60200101906001600160f81b031916908160001a90535080846120f6856002612903565b815181106121065761210661286e565b60200101906001600160f81b031916908160001a9053505050808061212a9061289a565b915050612083565b8060000361213f57505050565b5b6020811061215f578251825260209283019290910190601f1901612140565b915181516020939093036101000a6000190180199091169216919091179052565b604080516102208101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082018390526101408201839052610160820183905261018082018390526101a08201526101c081018290526101e0810182905261020081019190915290565b634e487b7160e01b600052604160045260246000fd5b60405161022081016001600160401b03811182821017156122445761224461220b565b60405290565b60405160c081016001600160401b03811182821017156122445761224461220b565b604051601f8201601f191681016001600160401b03811182821017156122945761229461220b565b604052919050565b80356001600160a01b03811681146122b357600080fd5b919050565b600082601f8301126122c957600080fd5b81356001600160401b038111156122e2576122e261220b565b6122f5601f8201601f191660200161226c565b81815284602083860101111561230a57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160401b03811681146122b357600080fd5b6000610220828403121561235157600080fd5b612359612221565b905081358152602082013560208201526040820135604082015261237f6060830161229c565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e08201356001600160401b03808211156123bc57600080fd5b6123c8858386016122b8565b60e0840152610100848101359084015261012080850135908401526101408085013590840152610160808501359084015261018080850135908401526101a09150818401358181111561241a57600080fd5b612426868287016122b8565b838501525050506101c08083013581830152506101e0612447818401612327565b818301525061020080830135818301525092915050565b600082601f83011261246f57600080fd5b813560206001600160401b038083111561248b5761248b61220b565b8260051b61249a83820161226c565b93845285810183019383810190888611156124b457600080fd5b84880192505b858310156124f0578235848111156124d25760008081fd5b6124e08a87838c01016122b8565b83525091840191908401906124ba565b98975050505050505050565b600060c0828403121561250e57600080fd5b61251661224a565b90508135815260208201356001600160401b038082111561253657600080fd5b612542858386016122b8565b6020840152604084013591508082111561255b57600080fd5b6125678583860161245e565b6040840152606084013560608401526080840135608084015260a084013591508082111561259457600080fd5b506125a1848285016122b8565b60a08301525092915050565b60008060008060008060c087890312156125c657600080fd5b86356001600160401b03808211156125dd57600080fd5b6125e98a838b0161233e565b975060208901359150808211156125ff57600080fd5b5061260c89828a016124fc565b95505060408701359350606087013592506080870135915061263060a0880161229c565b90509295509295509295565b6000815180845260005b8181101561266257602081850181015186830182015201612646565b506000602082860101526020601f19601f83011685010191505092915050565b821515815260406020820152600061269d604083018461263c565b949350505050565b6000602082840312156126b757600080fd5b81356001600160401b038111156126cd57600080fd5b61269d848285016124fc565b6000602082840312156126eb57600080fd5b81356001600160401b0381111561270157600080fd5b61269d8482850161233e565b60006020828403121561271f57600080fd5b81356001600160401b0381111561273557600080fd5b61269d848285016122b8565b602081526000610480602083018461263c565b602081528151602082015260208201516040820152604082015160608201526000606083015161278f60808401826001600160a01b03169052565b50608083015160a083015260a083015160c083015260c083015160e083015260e083015161022061010081818601526127cc61024086018461263c565b90860151610120868101919091528601516101408087019190915286015161016080870191909152860151610180808701919091528601516101a080870191909152860151858203601f19016101c08088019190915291935090612830848361263c565b908701516101e087810191909152870151909350905061020061285d818701836001600160401b03169052565b959095015193019290925250919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016128ac576128ac612884565b5060010190565b818103818111156103e1576103e1612884565b808201808211156103e1576103e1612884565b634e487b7160e01b600052601260045260246000fd5b6000826128fe576128fe6128d9565b500490565b600081600019048311821515161561291d5761291d612884565b500290565b600181815b8085111561295d57816000190482111561294357612943612884565b8085161561295057918102915b93841c9390800290612927565b509250929050565b600082612974575060016103e1565b81612981575060006103e1565b816001811461299757600281146129a1576129bd565b60019150506103e1565b60ff8411156129b2576129b2612884565b50506001821b6103e1565b5060208310610133831016604e8410600b84101617156129e0575081810a6103e1565b6129ea8383612922565b80600019048211156129fe576129fe612884565b029392505050565b60006104808383612965565b600082612a2157612a216128d9565b500690565b60ff82811682821603908111156103e1576103e161288456fe7665726966794163636f756e74202d20646966666572656e74207472696520726f6f74737665726966794163636f756e74202d20646966666572656e74206163636f756e7420616464726573737665726966794163636f756e74202d20646966666572656e74206163636f756e742064617461a26469706673582212205bc1104e675ea7839dee5af05a602d4603941d8ac6c69857829696e401ea1d6264736f6c63430008100033",
    "sourceMap": "89:3328:0:-:0;;;154:16;;;;;;;;;;89:3328;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063b3dd6a0a1161005b578063b3dd6a0a14610114578063bfe370d91461015a578063d76f7f0d1461016f578063e7617bf81461018f57600080fd5b80634d11c6f61461008d57806355eff580146100b7578063895308fa146100da578063a2deadbd146100fb575b600080fd5b6100a061009b3660046125ad565b6101af565b6040516100ae929190612682565b60405180910390f35b6100ca6100c53660046126a5565b6103d6565b60405190151581526020016100ae565b6100ed6100e83660046126d9565b6103e7565b6040519081526020016100ae565b6100ed61010936600461270d565b805160209091012090565b61012761012236600461270d565b610400565b6040516100ae91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b6100ed61016836600461270d565b6020015190565b61018261017d3660046126d9565b61042d565b6040516100ae9190612741565b6101a261019d36600461270d565b610438565b6040516100ae9190612754565b60408051600480825260a082019092526000916060918391816020015b60608152602001906001900390816101cc5790505090506101ed6000610449565b816000815181106102005761020061286e565b602002602001018190525061021487610449565b816001815181106102275761022761286e565b602002602001018190525061023b86610449565b8160028151811061024e5761024e61286e565b602002602001018190525061026285610449565b816003815181106102755761027561286e565b6020908102919091010152875160808a0151146102b1576000604051806060016040528060248152602001612a406024913992509250506103cb565b8760a00151805190602001206102c68261045c565b80519060200120146102f7576000604051806060016040528060268152602001612a8d6026913992509250506103cb565b6040516bffffffffffffffffffffffff19606086901b1660208201526034016040516020818303038152906040528051906020012061033c6101688a60200151610487565b14610366576000604051806060016040528060298152602001612a646029913992509250506103cb565b61036f886104e6565b9250826103b557505060408051808201909152601d81527f7665726966794163636f756e74202d20696e76616c69642070726f6f660000006020820152600091506103cb565b5050604080516020810190915260008152600191505b965096945050505050565b60006103e1826104e6565b92915050565b60006103f28261042d565b805190602001209050919050565b6040805160808101825260008082526020820181905291810182905260608101919091526103e1826106b7565b60606103e18261079e565b610440612180565b6103e182610ae8565b60606103e161045783610d21565b610e5b565b6060600061046983610eab565b905061048061047a825160c0610fde565b82611195565b9392505050565b604051815160005b818110156104c8578060200184015160f01c610f001660041c60108260200186015160f01c06018160011c60200184015360020161048f565b5060029004808252601f19601f909101168101602001604052919050565b60008082604001518360800151815181106105035761050361286e565b60200260200101519050600061052061051b83611212565b61123f565b9050836060015160000361059d57835182516020840120146105985760405162461bcd60e51b815260206004820152602660248201527f7665726966795472696550726f6f6620726f6f74206e6f6465206861736820696044820152651b9d985b1a5960d21b60648201526084015b60405180910390fd5b610657565b60208251101561060a5760006105ba6105b5836112ee565b61138e565b855190915081146106045760405162461bcd60e51b81526020600482015260146024820152733b32b934b33caa3934b2a83937b7b3101e10199960611b604482015260640161058f565b50610657565b835182516020840120146106575760405162461bcd60e51b81526020600482015260146024820152737665726966795472696550726f6f6620656c736560601b604482015260640161058f565b6000610666826000015161144a565b90508060110361068257610679856114cf565b95945050505050565b8060020361069457610679828661161b565b8460a00151516000036106ac57506001949350505050565b506000949350505050565b6040805160808101825260008082526020820181905291810182905260608101829052906106e761051b84611212565b905060005b6106f5826118e9565b1561079757806000036107155761070e6105b5836112ee565b8352610785565b80600103610733576107296105b5836112ee565b6020840152610785565b806002036107595761074f61016861074a846112ee565b61190d565b6040840152610785565b8060030361077a5761077061016861074a846112ee565b6060840152610785565b610783826112ee565b505b8061078f8161289a565b9150506106ec565b5050919050565b60408051600f808252610200820190925260609160009190816020015b60608152602001906001900390816107bb57905050905061080083602001516040516020016107ec91815260200190565b604051602081830303815290604052610e5b565b816000815181106108135761081361286e565b602002602001018190525061083883604001516040516020016107ec91815260200190565b8160018151811061084b5761084b61286e565b602002602001018190525061086383606001516119f6565b816002815181106108765761087661286e565b602002602001018190525061089b83608001516040516020016107ec91815260200190565b816003815181106108ae576108ae61286e565b60200260200101819052506108d38360a001516040516020016107ec91815260200190565b816004815181106108e6576108e661286e565b602002602001018190525061090b8360c001516040516020016107ec91815260200190565b8160058151811061091e5761091e61286e565b60200260200101819052506109368360e00151610e5b565b816006815181106109495761094961286e565b6020026020010181905250610962836101000151610449565b816007815181106109755761097561286e565b602002602001018190525061098e836101200151610449565b816008815181106109a1576109a161286e565b60200260200101819052506109ba836101400151610449565b816009815181106109cd576109cd61286e565b60200260200101819052506109e6836101600151610449565b81600a815181106109f9576109f961286e565b6020026020010181905250610a12836101800151610449565b81600b81518110610a2557610a2561286e565b6020026020010181905250610a3e836101a00151610e5b565b81600c81518110610a5157610a5161286e565b6020026020010181905250610a77836101c001516040516020016107ec91815260200190565b81600d81518110610a8a57610a8a61286e565b6020026020010181905250610ac1836101e001516040516020016107ec919060c09190911b6001600160c01b031916815260080190565b81600e81518110610ad457610ad461286e565b60200260200101819052506104808161045c565b610af0612180565b6000610afe61051b84611212565b905060005b610b0c826118e9565b15610d0f5780600003610b2f57610b256105b5836112ee565b6020840152610cfd565b80600103610b4d57610b436105b5836112ee565b6040840152610cfd565b80600203610b7957610b66610b61836112ee565b611a19565b6001600160a01b03166060840152610cfd565b80600303610b9757610b8d6105b5836112ee565b6080840152610cfd565b80600403610bb557610bab6105b5836112ee565b60a0840152610cfd565b80600503610bd357610bc96105b5836112ee565b60c0840152610cfd565b80600603610bf157610be761074a836112ee565b60e0840152610cfd565b80600703610c1057610c056105b5836112ee565b610100840152610cfd565b80600803610c2f57610c246105b5836112ee565b610120840152610cfd565b80600903610c4e57610c436105b5836112ee565b610140840152610cfd565b80600a03610c6d57610c626105b5836112ee565b610160840152610cfd565b80600b03610c8c57610c816105b5836112ee565b610180840152610cfd565b80600c03610cab57610ca061074a836112ee565b6101a0840152610cfd565b80600d03610cca57610cbf6105b5836112ee565b6101c0840152610cfd565b80600e03610cf257610cde6105b5836112ee565b6001600160401b03166101e0840152610cfd565b610cfb826112ee565b505b80610d078161289a565b915050610b03565b50508151602090920191909120815290565b6040805160208082528183019092526060916000919060208201818036833701905050905082602082015260005b6020811015610d9257818181518110610d6a57610d6a61286e565b01602001516001600160f81b031916600003610d925780610d8a8161289a565b915050610d4f565b6000610d9f8260206128b3565b6001600160401b03811115610db657610db661220b565b6040519080825280601f01601f191660200182016040528015610de0576020820181803683370190505b50905060005b8151811015610e52578383610dfa8161289a565b945081518110610e0c57610e0c61286e565b602001015160f81c60f81b828281518110610e2957610e2961286e565b60200101906001600160f81b031916908160001a90535080610e4a8161289a565b915050610de6565b50949350505050565b60608082516001148015610e8a5750608083600081518110610e7f57610e7f61286e565b016020015160f81c11155b15610e965750816103e1565b610480610ea584516080610fde565b84611195565b60608151600003610ecf5760408051600080825260208201909252905b5092915050565b6000805b8351811015610f1657838181518110610eee57610eee61286e565b60200260200101515182610f0291906128c6565b915080610f0e8161289a565b915050610ed3565b6000826001600160401b03811115610f3057610f3061220b565b6040519080825280601f01601f191660200182016040528015610f5a576020820181803683370190505b50600092509050602081015b8551831015610e52576000868481518110610f8357610f8361286e565b602002602001015190506000602082019050610fa183828451611a82565b878581518110610fb357610fb361286e565b60200260200101515183610fc791906128c6565b925050508280610fd69061289a565b935050610f66565b6060806038841015611048576040805160018082528183019092529060208201818036833701905050905061101383856128c6565b601f1a60f81b8160008151811061102c5761102c61286e565b60200101906001600160f81b031916908160001a905350610480565b600060015b61105781876128ef565b1561107d57816110668161289a565b9250611076905061010082612903565b905061104d565b6110888260016128c6565b6001600160401b0381111561109f5761109f61220b565b6040519080825280601f01601f1916602001820160405280156110c9576020820181803683370190505b5092506110d685836128c6565b6110e19060376128c6565b601f1a60f81b836000815181106110fa576110fa61286e565b60200101906001600160f81b031916908160001a905350600190505b81811161118b5761010061112a82846128b3565b61113690610100612a06565b61114090886128ef565b61114a9190612a12565b601f1a60f81b8382815181106111625761116261286e565b60200101906001600160f81b031916908160001a905350806111838161289a565b915050611116565b5050905092915050565b6060806040519050835180825260208201818101602087015b818310156111c65780518352602092830192016111ae565b50855184518101855292509050808201602086015b818310156111f35780518352602092830192016111db565b508651929092011591909101601f01601f191660405250905092915050565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b604080516080810182526000918101828152606082018390528152602081019190915261126b82611afa565b6112b75760405162461bcd60e51b815260206004820152601f60248201527f524c504465636f646572206974657261746f72206973206e6f74206c69737400604482015260640161058f565b60006112c68360200151611b35565b83602001516112d591906128c6565b6040805180820190915293845260208401525090919050565b604080518082019091526000808252602082015261130b826118e9565b6113575760405162461bcd60e51b815260206004820152601f60248201527f524c504465636f646572206974657261746f7220686173206e6f206e65787400604482015260640161058f565b6020820151600061136782611bb0565b905061137381836128c6565b60209485015260408051808201909152908152928301525090565b8051600090158015906113a357508151602110155b6113ef5760405162461bcd60e51b815260206004820181905260248201527f524c504465636f64657220746f55696e7420696e76616c6964206c656e677468604482015260640161058f565b60006113fe8360200151611b35565b9050600081846000015161141291906128b3565b905060008083866020015161142791906128c6565b9050805191506020831015610e5257506020919091036101000a90049392505050565b8051600090810361145d57506000919050565b60008061146d8460200151611b35565b846020015161147c91906128c6565b905060008460000151856020015161149491906128c6565b90505b808210156114c6576114a882611bb0565b6114b290836128c6565b9150826114be8161289a565b935050611497565b50909392505050565b60008082604001518360800151815181106114ec576114ec61286e565b6020026020010151905082602001515183606001511061156657600061153b61151c61151784611212565b611c54565b60108151811061152e5761152e61286e565b602002602001015161190d565b90508360a0015180519060200120818051906020012003611560575060019392505050565b506115fc565b600083602001518460600151815181106115825761158261286e565b016020015160f81c905060006115ae61159d61151785611212565b838151811061152e5761152e61286e565b905080516000146115f95760208101518552606085018051600191906115d59083906128c6565b905250608085018051600191906115ed9083906128c6565b905250610679856104e6565b50505b8260a00151516000036116125750600192915050565b50600092915050565b60008061162a61074a856112ee565b9050600061163a61074a866112ee565b602083015190915060fc1c60028190036116fb5760006001845161165e91906128b3565b90506000611670856001846000611db6565b9050600061168988602001518960600151856000611db6565b905084805190602001208860a0015180519060200120036116f35780805190602001208280519060200120036116c857600196505050505050506103e1565b805160208201206116d883611e9a565b80519060200120036116f357600196505050505050506103e1565b5050506118c4565b806003036117ad57600061171484600086516001611db6565b60208701516060880151815192935060009261173e9291906117379082906128b3565b6000611db6565b905083805190602001208760a0015180519060200120036117a657808051906020012082805190602001200361177c576001955050505050506103e1565b8051602082012061178c83611fd1565b80519060200120036117a6576001955050505050506103e1565b50506118c4565b80600003611873576000600184516117c591906128b3565b905060006117d7856001846000611db6565b905060006117f088602001518960600151856000611db6565b905080805190602001208280519060200120148061182257508051602082012061181983611e9a565b80519060200120145b156116f357602085015188526060880180518491906118429083906128c6565b9052506080880180516001919061185a9083906128c6565b905250611866886104e6565b96505050505050506103e1565b8060010361188c57825160006117d78582846001611db6565b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015260640161058f565b8460a00151516000036118dd57600193505050506103e1565b600093505050506103e1565b805180516020820151600092916118ff916128c6565b836020015110915050919050565b80516060906119685760405162461bcd60e51b815260206004820152602160248201527f524c504465636f64657220746f427974657320696e76616c6964206c656e67746044820152600d60fb1b606482015260840161058f565b60006119778360200151611b35565b9050600081846000015161198b91906128b3565b90506000816001600160401b038111156119a7576119a761220b565b6040519080825280601f01601f1916602001820160405280156119d1576020820181803683370190505b5090506000816020019050610e528487602001516119ef91906128c6565b8285612132565b60408051600560a21b831860148201526034810190915260609061048081610e5b565b8051600090601514611a795760405162461bcd60e51b815260206004820152602360248201527f524c504465636f64657220746f4164647265737320696e76616c6964206c656e6044820152620cee8d60eb1b606482015260840161058f565b6103e18261138e565b8282825b60208110611abe5781518352611a9d6020846128c6565b9250611aaa6020836128c6565b9150611ab76020826128b3565b9050611a86565b60006001611acd8360206128b3565b611ad990610100612a06565b611ae391906128b3565b925184518416931916929092179092525050505050565b80516000908103611b0d57506000919050565b6020820151805160001a9060c0821015611b2b575060009392505050565b5060019392505050565b8051600090811a6080811015611b4e5750600092915050565b60b8811080611b69575060c08110801590611b69575060f881105b15611b775750600192915050565b60c0811015611ba457611b8c600160b8612a26565b611b999060ff16826128b3565b6104809060016128c6565b611b8c600160f8612a26565b80516000908190811a6080811015611bcb5760019150610ec8565b60b8811015611bf157611bdf6080826128b3565b611bea9060016128c6565b9150610ec8565b60c0811015611c1e5760b78103600185019450806020036101000a85510460018201810193505050610ec8565b60f8811015611c3257611bdf60c0826128b3565b60019390930151602084900360f7016101000a900490920160f5190192915050565b6060611c5f82611afa565b611cb55760405162461bcd60e51b815260206004820152602160248201527f524c504465636f646572206974657261746f72206973206e6f742061206c69736044820152601d60fa1b606482015260840161058f565b6000611cc08361144a565b90506000816001600160401b03811115611cdc57611cdc61220b565b604051908082528060200260200182016040528015611d2157816020015b6040805180820190915260008082526020820152815260200190600190039081611cfa5790505b5090506000611d338560200151611b35565b8560200151611d4291906128c6565b90506000805b84811015611dab57611d5983611bb0565b9150604051806040016040528083815260200184815250848281518110611d8257611d8261286e565b6020908102919091010152611d9782846128c6565b925080611da38161289a565b915050611d48565b509195945050505050565b60606000611dc56020856128ef565b90506000611dd4602086612a12565b611ddf906008612903565b611deb906101006128b3565b9050602060008080886001600160401b03811115611e0b57611e0b61220b565b6040519080825280601f01601f191660200182016040528015611e35576020820181803683370190505b5090508a8a0191508715611e5f57818401516001600160fc1b031681850152602090930192600192505b825b86811015611e7f578285015182860152602090940193600101611e61565b5083820151851c851b84820152505050505050949350505050565b6060600082516002611eac9190612903565b90506000816001600160401b03811115611ec857611ec861220b565b6040519080825280601f01601f191660200182016040528015611ef2576020820181803683370190505b50905060005b8451811015611fc957600080611f3c878481518110611f1957611f1961286e565b01602001516001600160f81b031916600481901c916001600160fc1b0390911690565b90925090508184611f4e856002612903565b81518110611f5e57611f5e61286e565b60200101906001600160f81b031916908160001a9053508084611f82856002612903565b611f8d9060016128c6565b81518110611f9d57611f9d61286e565b60200101906001600160f81b031916908160001a90535050508080611fc19061289a565b915050611ef8565b509392505050565b60606000600183516002611fe59190612903565b611fef91906128b3565b90506000816001600160401b0381111561200b5761200b61220b565b6040519080825280601f01601f191660200182016040528015612035576020820181803683370190505b5090508360008151811061204b5761204b61286e565b602001015160f81c60f81b816000815181106120695761206961286e565b60200101906001600160f81b031916908160001a90535060015b8451811015611fc9576000806120a4878481518110611f1957611f1961286e565b9092509050818460016120b8866002612903565b6120c291906128b3565b815181106120d2576120d261286e565b60200101906001600160f81b031916908160001a90535080846120f6856002612903565b815181106121065761210661286e565b60200101906001600160f81b031916908160001a9053505050808061212a9061289a565b915050612083565b8060000361213f57505050565b5b6020811061215f578251825260209283019290910190601f1901612140565b915181516020939093036101000a6000190180199091169216919091179052565b604080516102208101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082018390526101408201839052610160820183905261018082018390526101a08201526101c081018290526101e0810182905261020081019190915290565b634e487b7160e01b600052604160045260246000fd5b60405161022081016001600160401b03811182821017156122445761224461220b565b60405290565b60405160c081016001600160401b03811182821017156122445761224461220b565b604051601f8201601f191681016001600160401b03811182821017156122945761229461220b565b604052919050565b80356001600160a01b03811681146122b357600080fd5b919050565b600082601f8301126122c957600080fd5b81356001600160401b038111156122e2576122e261220b565b6122f5601f8201601f191660200161226c565b81815284602083860101111561230a57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160401b03811681146122b357600080fd5b6000610220828403121561235157600080fd5b612359612221565b905081358152602082013560208201526040820135604082015261237f6060830161229c565b60608201526080820135608082015260a082013560a082015260c082013560c082015260e08201356001600160401b03808211156123bc57600080fd5b6123c8858386016122b8565b60e0840152610100848101359084015261012080850135908401526101408085013590840152610160808501359084015261018080850135908401526101a09150818401358181111561241a57600080fd5b612426868287016122b8565b838501525050506101c08083013581830152506101e0612447818401612327565b818301525061020080830135818301525092915050565b600082601f83011261246f57600080fd5b813560206001600160401b038083111561248b5761248b61220b565b8260051b61249a83820161226c565b93845285810183019383810190888611156124b457600080fd5b84880192505b858310156124f0578235848111156124d25760008081fd5b6124e08a87838c01016122b8565b83525091840191908401906124ba565b98975050505050505050565b600060c0828403121561250e57600080fd5b61251661224a565b90508135815260208201356001600160401b038082111561253657600080fd5b612542858386016122b8565b6020840152604084013591508082111561255b57600080fd5b6125678583860161245e565b6040840152606084013560608401526080840135608084015260a084013591508082111561259457600080fd5b506125a1848285016122b8565b60a08301525092915050565b60008060008060008060c087890312156125c657600080fd5b86356001600160401b03808211156125dd57600080fd5b6125e98a838b0161233e565b975060208901359150808211156125ff57600080fd5b5061260c89828a016124fc565b95505060408701359350606087013592506080870135915061263060a0880161229c565b90509295509295509295565b6000815180845260005b8181101561266257602081850181015186830182015201612646565b506000602082860101526020601f19601f83011685010191505092915050565b821515815260406020820152600061269d604083018461263c565b949350505050565b6000602082840312156126b757600080fd5b81356001600160401b038111156126cd57600080fd5b61269d848285016124fc565b6000602082840312156126eb57600080fd5b81356001600160401b0381111561270157600080fd5b61269d8482850161233e565b60006020828403121561271f57600080fd5b81356001600160401b0381111561273557600080fd5b61269d848285016122b8565b602081526000610480602083018461263c565b602081528151602082015260208201516040820152604082015160608201526000606083015161278f60808401826001600160a01b03169052565b50608083015160a083015260a083015160c083015260c083015160e083015260e083015161022061010081818601526127cc61024086018461263c565b90860151610120868101919091528601516101408087019190915286015161016080870191909152860151610180808701919091528601516101a080870191909152860151858203601f19016101c08088019190915291935090612830848361263c565b908701516101e087810191909152870151909350905061020061285d818701836001600160401b03169052565b959095015193019290925250919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016128ac576128ac612884565b5060010190565b818103818111156103e1576103e1612884565b808201808211156103e1576103e1612884565b634e487b7160e01b600052601260045260246000fd5b6000826128fe576128fe6128d9565b500490565b600081600019048311821515161561291d5761291d612884565b500290565b600181815b8085111561295d57816000190482111561294357612943612884565b8085161561295057918102915b93841c9390800290612927565b509250929050565b600082612974575060016103e1565b81612981575060006103e1565b816001811461299757600281146129a1576129bd565b60019150506103e1565b60ff8411156129b2576129b2612884565b50506001821b6103e1565b5060208310610133831016604e8410600b84101617156129e0575081810a6103e1565b6129ea8383612922565b80600019048211156129fe576129fe612884565b029392505050565b60006104808383612965565b600082612a2157612a216128d9565b500690565b60ff82811682821603908111156103e1576103e161288456fe7665726966794163636f756e74202d20646966666572656e74207472696520726f6f74737665726966794163636f756e74202d20646966666572656e74206163636f756e7420616464726573737665726966794163636f756e74202d20646966666572656e74206163636f756e742064617461a26469706673582212205bc1104e675ea7839dee5af05a602d4603941d8ac6c69857829696e401ea1d6264736f6c63430008100033",
    "sourceMap": "89:3328:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;308:1349;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;174:130;;;;;;:::i;:::-;;:::i;:::-;;;7627:14:26;;7620:22;7602:41;;7590:2;7575:18;174:130:0;7462:187:26;1848:152:0;;;;;;:::i;:::-;;:::i;:::-;;;8158:25:26;;;8146:2;8131:18;1848:152:0;8012:177:26;1703:141:0;;;;;;:::i;:::-;1811:28;;;;;;;;1703:141;2360:148;;;;;;:::i;:::-;;:::i;:::-;;;;;;8734:13:26;;8716:32;;8804:4;8792:17;;;8786:24;8764:20;;;8757:54;8867:4;8855:17;;;8849:24;8827:20;;;8820:54;8930:4;8918:17;;;8912:24;8890:20;;;8883:54;;;;8703:3;8688:19;;8519:424;3275:140:0;;;;;;:::i;:::-;3401:2;3390:14;3384:21;;3275:140;2004:165;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2173:183::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;308:1349::-;614:14;;;626:1;614:14;;;;;;;;;544:10;;556:20;;544:10;;614:14;;;;;;;;;;;;;;;;;;;;584:44;;652:23;673:1;652:20;:23::i;:::-;634:12;647:1;634:15;;;;;;;;:::i;:::-;;;;;;:41;;;;699:29;720:7;699:20;:29::i;:::-;681:12;694:1;681:15;;;;;;;;:::i;:::-;;;;;;:47;;;;752:30;773:8;752:20;:30::i;:::-;734:12;747:1;734:15;;;;;;;;:::i;:::-;;;;;;:48;;;;806:33;827:11;806:20;:33::i;:::-;788:12;801:1;788:15;;;;;;;;:::i;:::-;;;;;;;;;;:51;870:24;;850:16;;;;:44;846:104;;904:5;896:54;;;;;;;;;;;;;;;;;;;;;;;;846:104;1019:11;:25;;;1009:36;;;;;;970:34;991:12;970:20;:34::i;:::-;960:45;;;;;;:85;956:147;;1055:5;1047:56;;;;;;;;;;;;;;;;;;;;;;;;956:147;1174:33;;-1:-1:-1;;11612:2:26;11608:15;;;11604:53;1174:33:0;;;11592:66:26;11674:12;;1174:33:0;;;;;;;;;;;;1164:44;;;;;;1113:47;1128:31;1143:11;:15;;;1128:14;:31::i;1113:47::-;:95;1109:160;;1218:5;1210:59;;;;;;;;;;;;;;;;;;;;;;;;1109:160;1534:29;:11;:27;:29::i;:::-;1526:37;;1574:5;1569:59;;-1:-1:-1;;1581:47:0;;;;;;;;;;;;;;;;;1589:5;;-1:-1:-1;1581:47:0;;1569:59;-1:-1:-1;;1635:17:0;;;;;;;;;-1:-1:-1;1635:17:0;;1643:4;;-1:-1:-1;308:1349:0;;;;;;;;;;:::o;174:130::-;258:4;277:22;:4;:20;:22::i;:::-;270:29;174:130;-1:-1:-1;;174:130:0:o;1848:152::-;1934:12;1971:23;1987:6;1971:15;:23::i;:::-;1961:34;;;;;;1954:41;;1848:152;;;:::o;2360:148::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2472:31:0;2498:4;2472:25;:31::i;2004:165::-;2093:17;2125:39;2157:6;2125:31;:39::i;2173:183::-;2236:41;;:::i;:::-;2310:35;2340:4;2310:29;:35::i;2098:119:2:-;2152:12;2183:27;2195:14;2204:4;2195:8;:14::i;:::-;2183:11;:27::i;980:189::-;1044:12;1068:17;1088:13;1096:4;1088:7;:13::i;:::-;1068:33;;1118:44;1125:30;1138:4;:11;1151:3;1125:12;:30::i;:::-;1157:4;1118:6;:44::i;:::-;1111:51;980:189;-1:-1:-1;;;980:189:2:o;2512:759:0:-;2624:4;2618:11;2648:8;;2686:1;2663:464;2702:4;2699:1;2696:11;2663:464;;;3110:1;3104:4;3100:12;3097:1;3093:20;3087:27;3082:3;3078:37;3070:6;3066:50;3063:1;3059:58;3054:2;3047:1;3041:4;3037:12;3034:1;3030:20;3024:27;3019:3;3015:37;3011:46;3007:111;3001:1;2998;2994:9;2988:4;2984:20;2979:3;2975:30;2967:152;2730:1;2723:9;2663:464;;;-1:-1:-1;3158:1:0;3148:12;;3167:19;;;-1:-1:-1;;3251:4:0;3239:17;;;3225:33;3206:54;;3219:4;3206:54;3200:4;3193:68;3174:3;2512:759;-1:-1:-1;2512:759:0:o;579:930:6:-;652:4;664:17;684:4;:10;;;695:4;:15;;;684:27;;;;;;;;:::i;:::-;;;;;;;664:47;;717:29;749:36;:25;769:4;749:19;:25::i;:::-;:34;:36::i;:::-;717:68;;796:4;:13;;;813:1;796:18;792:368;;851:17;;832:15;;;;;;:36;824:87;;;;-1:-1:-1;;;824:87:6;;11899:2:26;824:87:6;;;11881:21:26;11938:2;11918:18;;;11911:30;11977:34;11957:18;;;11950:62;-1:-1:-1;;;12028:18:26;;;12021:36;12074:19;;824:87:6;;;;;;;;;792:368;;;942:2;928:4;:11;:16;924:236;;;954:12;977:19;:10;:3;:8;:10::i;:::-;:17;:19::i;:::-;1021:17;;969:28;;-1:-1:-1;1013:25:6;;1005:58;;;;-1:-1:-1;;;1005:58:6;;12306:2:26;1005:58:6;;;12288:21:26;12345:2;12325:18;;;12318:30;-1:-1:-1;;;12364:18:26;;;12357:50;12424:18;;1005:58:6;12104:344:26;1005:58:6;946:124;924:236;;;1111:17;;1092:15;;;;;;:36;1084:69;;;;-1:-1:-1;;;1084:69:6;;12655:2:26;1084:69:6;;;12637:21:26;12694:2;12674:18;;;12667:30;-1:-1:-1;;;12713:18:26;;;12706:50;12773:18;;1084:69:6;12453:344:26;1084:69:6;1166:19;1188:28;1207:3;:8;;;1188:18;:28::i;:::-;1166:50;;1241:11;1256:2;1241:17;1237:191;;1275:27;1297:4;1275:21;:27::i;:::-;1268:34;579:930;-1:-1:-1;;;;;579:930:6:o;1237:191::-;1347:11;1362:1;1347:16;1343:85;;1380:41;1411:3;1416:4;1380:30;:41::i;1343:85::-;1438:4;:18;;;:25;1467:1;1438:30;1434:70;;-1:-1:-1;1477:4:6;;579:930;-1:-1:-1;;;;579:930:6:o;1434:70::-;-1:-1:-1;1499:5:6;;579:930;-1:-1:-1;;;;579:930:6:o;8250:523:5:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8372:36:5;:25;8392:4;8372:19;:25::i;:36::-;8341:67;;8415:11;8432:337;8439:12;:2;:10;:12::i;:::-;8432:337;;;8465:3;8472:1;8465:8;8461:288;;8491:18;:9;:2;:7;:9::i;:18::-;8475:34;;8461:288;;;8526:3;8533:1;8526:8;8522:227;;8554:18;:9;:2;:7;:9::i;:18::-;8536:15;;;:36;8522:227;;;8589:3;8596:1;8589:8;8585:164;;8621:30;8631:19;:9;:2;:7;:9::i;:::-;:17;:19::i;8621:30::-;8599:19;;;:52;8585:164;;;8668:3;8675:1;8668:8;8664:85;;8697:30;8707:19;:9;:2;:7;:9::i;8697:30::-;8678:16;;;:49;8664:85;;;8740:9;:2;:7;:9::i;:::-;;8664:85;8757:5;;;;:::i;:::-;;;;8432:337;;;8335:438;;8250:523;;;:::o;1524:1133::-;1646:15;;;1658:2;1646:15;;;;;;;;;1599:17;;1624:19;;1646:15;;;;;;;;;;;;;;;;;;;;;1624:37;;1678:58;1717:6;:17;;;1700:35;;;;;;13203:19:26;;13247:2;13238:12;;13074:182;1700:35:5;;;;;;;;;;;;;1678:21;:58::i;:::-;1668:4;1673:1;1668:7;;;;;;;;:::i;:::-;;;;;;:68;;;;1752:58;1791:6;:17;;;1774:35;;;;;;13203:19:26;;13247:2;13238:12;;13074:182;1752:58:5;1742:4;1747:1;1742:7;;;;;;;;:::i;:::-;;;;;;:68;;;;1826:37;1850:6;:12;;;1826:23;:37::i;:::-;1816:4;1821:1;1816:7;;;;;;;;:::i;:::-;;;;;;:47;;;;1879:57;1918:6;:16;;;1901:34;;;;;;13203:19:26;;13247:2;13238:12;;13074:182;1879:57:5;1869:4;1874:1;1869:7;;;;;;;;:::i;:::-;;;;;;:67;;;;1952:64;1991:6;:23;;;1974:41;;;;;;13203:19:26;;13247:2;13238:12;;13074:182;1952:64:5;1942:4;1947:1;1942:7;;;;;;;;:::i;:::-;;;;;;:74;;;;2032:60;2071:6;:19;;;2054:37;;;;;;13203:19:26;;13247:2;13238:12;;13074:182;2032:60:5;2022:4;2027:1;2022:7;;;;;;;;:::i;:::-;;;;;;:70;;;;2108:39;2130:6;:16;;;2108:21;:39::i;:::-;2098:4;2103:1;2098:7;;;;;;;;:::i;:::-;;;;;;:49;;;;2163:39;2184:6;:17;;;2163:20;:39::i;:::-;2153:4;2158:1;2153:7;;;;;;;;:::i;:::-;;;;;;:49;;;;2218:35;2239:6;:13;;;2218:20;:35::i;:::-;2208:4;2213:1;2208:7;;;;;;;;:::i;:::-;;;;;;:45;;;;2269:37;2290:6;:15;;;2269:20;:37::i;:::-;2259:4;2264:1;2259:7;;;;;;;;:::i;:::-;;;;;;:47;;;;2323:36;2344:6;:14;;;2323:20;:36::i;:::-;2312:4;2317:2;2312:8;;;;;;;;:::i;:::-;;;;;;:47;;;;2376:38;2397:6;:16;;;2376:20;:38::i;:::-;2365:4;2370:2;2365:8;;;;;;;;:::i;:::-;;;;;;:49;;;;2431:39;2453:6;:16;;;2431:21;:39::i;:::-;2420:4;2425:2;2420:8;;;;;;;;:::i;:::-;;;;;;:50;;;;2487:55;2526:6;:14;;;2509:32;;;;;;13203:19:26;;13247:2;13238:12;;13074:182;2487:55:5;2476:4;2481:2;2476:8;;;;;;;;:::i;:::-;;;;;;:66;;;;2559:53;2598:6;:12;;;2581:30;;;;;;;13426:3:26;13404:16;;;;-1:-1:-1;;;;;;13400:51:26;13388:64;;13477:1;13468:11;;13261:224;2559:53:5;2548:4;2553:2;2548:8;;;;;;;;:::i;:::-;;;;;;:64;;;;2626:26;2647:4;2626:20;:26::i;2661:1423::-;2731:25;;:::i;:::-;2764:28;2795:41;:30;2815:9;2795:19;:30::i;:41::-;2764:72;;2842:11;2859:1181;2866:12;:2;:10;:12::i;:::-;2859:1181;;;2892:3;2899:1;2892:8;2888:1132;;2930:18;:9;:2;:7;:9::i;:18::-;2902:17;;;:47;2888:1132;;;2966:3;2973:1;2966:8;2962:1058;;3004:18;:9;:2;:7;:9::i;:18::-;2976:17;;;:47;2962:1058;;;3040:3;3047:1;3040:8;3036:984;;3065:21;:9;:2;:7;:9::i;:::-;:19;:21::i;:::-;-1:-1:-1;;;;;3050:36:5;:12;;;:36;3036:984;;;3103:3;3110:1;3103:8;3099:921;;3140:18;:9;:2;:7;:9::i;:18::-;3113:16;;;:46;3099:921;;;3176:3;3183:1;3176:8;3172:848;;3220:18;:9;:2;:7;:9::i;:18::-;3186:23;;;:53;3172:848;;;3256:3;3263:1;3256:8;3252:768;;3296:18;:9;:2;:7;:9::i;:18::-;3266:19;;;:49;3252:768;;;3332:3;3339:1;3332:8;3328:692;;3361:19;:9;:2;:7;:9::i;:19::-;3342:16;;;:38;3328:692;;;3397:3;3404:1;3397:8;3393:627;;3427:18;:9;:2;:7;:9::i;:18::-;3407:17;;;:38;3393:627;;;3462:3;3469:1;3462:8;3458:562;;3488:18;:9;:2;:7;:9::i;:18::-;3472:13;;;:34;3458:562;;;3523:3;3530:1;3523:8;3519:501;;3551:18;:9;:2;:7;:9::i;:18::-;3533:15;;;:36;3519:501;;;3586:3;3593:2;3586:9;3582:438;;3614:18;:9;:2;:7;:9::i;:18::-;3597:14;;;:35;3582:438;;;3649:3;3656:2;3649:9;3645:375;;3679:18;:9;:2;:7;:9::i;:18::-;3660:16;;;:37;3645:375;;;3714:3;3721:2;3714:9;3710:310;;3744:19;:9;:2;:7;:9::i;:19::-;3725:16;;;:38;3710:310;;;3780:3;3787:2;3780:9;3776:244;;3816:18;:9;:2;:7;:9::i;:18::-;3791:14;;;:44;3776:244;;;3852:3;3859:2;3852:9;3848:172;;3893:18;:9;:2;:7;:9::i;:18::-;-1:-1:-1;;;;;3871:41:5;:12;;;:41;3848:172;;;4011:9;:2;:7;:9::i;:::-;;3848:172;4028:5;;;;:::i;:::-;;;;2859:1181;;;-1:-1:-1;;4059:20:5;;;;;;;;;;4045:34;;:6;2661:1423::o;4052:454:2:-;4142:13;;;4152:2;4142:13;;;;;;;;;4101:12;;4125:14;;4142:13;;;;;;;;;;;-1:-1:-1;4142:13:2;4125:30;;4207:2;4202;4199:1;4195:10;4188:22;4229:6;4245:102;4261:2;4257:1;:6;4245:102;;;4288:1;4290;4288:4;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;4288:4:2;4296:1;4288:9;4317:5;4284:53;4265:3;;;;:::i;:::-;;;;4245:102;;;4356:16;4385:6;4390:1;4385:2;:6;:::i;:::-;-1:-1:-1;;;;;4375:17:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4375:17:2;;4356:36;;4407:6;4402:78;4423:3;:10;4419:1;:14;4402:78;;;4463:1;4465:3;;;;:::i;:::-;;;4463:6;;;;;;;;:::i;:::-;;;;;;;;;4454:3;4458:1;4454:6;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;4454:15:2;;;;;;;;-1:-1:-1;4435:3:2;;;;:::i;:::-;;;;4402:78;;;-1:-1:-1;4496:3:2;4052:454;-1:-1:-1;;;;4052:454:2:o;463:318::-;526:12;550:20;584:4;:11;599:1;584:16;:41;;;;;622:3;610:4;615:1;610:7;;;;;;;;:::i;:::-;;;;;;;604:21;;584:41;580:171;;;-1:-1:-1;651:4:2;580:171;;;696:44;703:30;716:4;:11;729:3;703:12;:30::i;:::-;735:4;696:6;:44::i;5634:723::-;5695:12;5723:5;:12;5739:1;5723:17;5719:67;;5763:12;;;5773:1;5763:12;;;;;;;;;;;-1:-1:-1;5756:19:2;5634:723;-1:-1:-1;;5634:723:2:o;5719:67::-;5796:8;;5830:82;5846:5;:12;5842:1;:16;5830:82;;;5886:5;5892:1;5886:8;;;;;;;;:::i;:::-;;;;;;;:15;5879:22;;;;;:::i;:::-;;-1:-1:-1;5860:3:2;;;;:::i;:::-;;;;5830:82;;;5922:22;5957:3;-1:-1:-1;;;;;5947:14:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5947:14:2;-1:-1:-1;5971:17:2;;-1:-1:-1;5922:39:2;-1:-1:-1;6040:4:2;6025:20;;6057:267;6072:5;:12;6068:1;:16;6057:267;;;6105:17;6125:5;6131:1;6125:8;;;;;;;;:::i;:::-;;;;;;;6105:28;;6148:12;6206:4;6200;6196:15;6185:26;;6226:42;6233:12;6247:7;6256:4;:11;6226:6;:42::i;:::-;6298:5;6304:1;6298:8;;;;;;;;:::i;:::-;;;;;;;:15;6282:31;;;;;:::i;:::-;;;6091:233;;6086:3;;;;;:::i;:::-;;;;6057:267;;3131:669;3198:12;3222:20;3262:2;3256:3;:8;3252:518;;;3290:12;;;3300:1;3290:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3280:22:2;-1:-1:-1;3337:12:2;3343:6;3337:3;:12;:::i;:::-;3351:2;3329:25;;;3316:7;3324:1;3316:10;;;;;;;;:::i;:::-;;;;:38;-1:-1:-1;;;;;3316:38:2;;;;;;;;;3252:518;;;3385:11;3419:1;3434:88;3441:7;3447:1;3441:3;:7;:::i;:::-;:12;3434:88;;3473:8;;;;:::i;:::-;;-1:-1:-1;3499:8:2;;-1:-1:-1;3504:3:2;3499:8;;:::i;:::-;;;3434:88;;;3556:10;:6;3565:1;3556:10;:::i;:::-;-1:-1:-1;;;;;3546:21:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3546:21:2;-1:-1:-1;3536:31:2;-1:-1:-1;3602:15:2;3611:6;3602;:15;:::i;:::-;:20;;3620:2;3602:20;:::i;:::-;3624:2;3594:33;;;3581:7;3589:1;3581:10;;;;;;;;:::i;:::-;;;;:46;-1:-1:-1;;;;;3581:46:2;;;;;;;;;3649:1;3645:5;;3641:119;3657:6;3652:1;:11;3641:119;;3737:3;3723:8;3730:1;3723:6;:8;:::i;:::-;3717:15;;:3;:15;:::i;:::-;3710:23;;:3;:23;:::i;:::-;3709:31;;;;:::i;:::-;3742:2;3701:44;;;3688:7;3696:1;3688:10;;;;;;;;:::i;:::-;;;;:57;-1:-1:-1;;;;;3688:57:2;;;;;;;;-1:-1:-1;3665:3:2;;;;:::i;:::-;;;;3641:119;;;3371:399;;3786:7;-1:-1:-1;3131:669:2;;;;:::o;6648:1169::-;6736:12;6760:22;6835:4;6829:11;6816:24;;6874:9;6868:16;6915:6;6904:9;6897:25;6961:4;6950:9;6946:20;6998:6;6994:2;6990:15;7066:4;7055:9;7051:20;7019:220;7093:3;7089:2;7086:11;7019:220;;;7215:9;;7204:21;;7130:4;7122:13;;;;7158;7019:220;;;-1:-1:-1;7263:17:2;;7323:16;;7311:29;;7293:48;;7263:17;-1:-1:-1;7361:3:2;-1:-1:-1;7384:15:2;;;7461:4;7445:21;;7413:221;7488:3;7484:2;7481:11;7413:221;;;7610:9;;7599:21;;7525:4;7517:13;;;;7553;7413:221;;;-1:-1:-1;7712:16:2;;7700:29;;;;7693:37;7684:47;;;;7756:2;7680:56;-1:-1:-1;;7661:112:2;7655:4;7648:126;-1:-1:-1;7801:9:2;-1:-1:-1;6648:1169:2;;;;:::o;1447:197:1:-;-1:-1:-1;;;;;;;;;;;;;;;;;1611:28:1;;;;;;;;1619:11;;1611:28;;1577:15;;;1611:28;;;;;;;;1447:197::o;1793:240::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1886:12:1;1893:4;1886:6;:12::i;:::-;1878:56;;;;-1:-1:-1;;;1878:56:1;;15876:2:26;1878:56:1;;;15858:21:26;15915:2;15895:18;;;15888:30;15954:33;15934:18;;;15927:61;16005:18;;1878:56:1;15674:355:26;1878:56:1;1941:11;1969:27;1984:4;:11;;;1969:14;:27::i;:::-;1955:4;:11;;;:41;;;;:::i;:::-;2009:19;;;;;;;;;;;;;;;;-1:-1:-1;2009:19:1;;1793:240;-1:-1:-1;1793:240:1:o;784:294::-;-1:-1:-1;;;;;;;;;;;;;;;;;873:13:1;881:4;873:7;:13::i;:::-;865:57;;;;-1:-1:-1;;;865:57:1;;16236:2:26;865:57:1;;;16218:21:26;16275:2;16255:18;;;16248:30;16314:33;16294:18;;;16287:61;16365:18;;865:57:1;16034:355:26;865:57:1;943:12;;;;929:11;982:16;943:12;982:11;:16::i;:::-;961:37;-1:-1:-1;1019:16:1;961:37;1019:3;:16;:::i;:::-;1004:12;;;;:31;1049:24;;;;;;;;;;;;;;;;-1:-1:-1;1049:24:1;784:294::o;4547:516::-;4630:8;;4607:7;;4630:12;;;;:30;;-1:-1:-1;4646:8:1;;4658:2;-1:-1:-1;4646:14:1;4630:30;4622:75;;;;-1:-1:-1;;;4622:75:1;;16596:2:26;4622:75:1;;;16578:21:26;;;16615:18;;;16608:30;16674:34;16654:18;;;16647:62;16726:18;;4622:75:1;16394:356:26;4622:75:1;4704:14;4721:27;4736:4;:11;;;4721:14;:27::i;:::-;4704:44;;4754:11;4779:6;4768:4;:8;;;:17;;;;:::i;:::-;4754:31;;4792:14;4812;4843:6;4829:4;:11;;;:20;;;;:::i;:::-;4812:37;;4888:6;4882:13;4872:23;;4966:2;4961:3;4958:11;4955:78;;;-1:-1:-1;5015:2:1;5011:12;;;;5006:3;5002:22;4990:35;;;5052:6;-1:-1:-1;;;4547:516:1:o;5935:383::-;6016:8;;5997:7;;6016:13;;6012:27;;-1:-1:-1;6038:1:1;;5935:383;-1:-1:-1;5935:383:1:o;6012:27::-;6046:13;6069:15;6101:27;6116:4;:11;;;6101:14;:27::i;:::-;6087:4;:11;;;:41;;;;:::i;:::-;6069:59;;6134:14;6165:4;:8;;;6151:4;:11;;;:22;;;;:::i;:::-;6134:39;;6179:116;6196:6;6186:7;:16;6179:116;;;6232:20;6244:7;6232:11;:20::i;:::-;6222:30;;:7;:30;:::i;:::-;6212:40;-1:-1:-1;6281:7:1;;;;:::i;:::-;;;;6179:116;;;-1:-1:-1;6308:5:1;;5935:383;-1:-1:-1;;;5935:383:1:o;1513:808:6:-;1592:4;1604:17;1624:4;:10;;;1635:4;:15;;;1624:27;;;;;;;;:::i;:::-;;;;;;;1604:47;;1679:4;:8;;;:15;1662:4;:13;;;:32;1658:582;;1704:17;1724:48;:34;:25;1744:4;1724:19;:25::i;:::-;:32;:34::i;:::-;1759:2;1724:38;;;;;;;;:::i;:::-;;;;;;;:46;:48::i;:::-;1704:68;;1813:4;:18;;;1803:29;;;;;;1794:4;1784:15;;;;;;:48;1780:84;;-1:-1:-1;1851:4:6;;1513:808;-1:-1:-1;;;1513:808:6:o;1780:84::-;1696:174;1658:582;;;1884:13;1914:4;:8;;;1923:4;:13;;;1914:23;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1947:29:6;1979:51;:34;:25;1999:4;1979:19;:25::i;:34::-;2014:5;1979:41;;;;;;;;:::i;:51::-;1947:83;;2045:16;:23;2072:1;2045:28;2039:195;;3401:2:0;3390:14;;3384:21;2086:43:6;;2139:13;;;:18;;2156:1;;2139:13;:18;;2156:1;;2139:18;:::i;:::-;;;-1:-1:-1;2167:15:6;;;:20;;2186:1;;2167:15;:20;;2186:1;;2167:20;:::i;:::-;;;-1:-1:-1;2204:21:6;2220:4;2204:15;:21::i;2039:195::-;1876:364;;1658:582;2250:4;:18;;;:25;2279:1;2250:30;2246:70;;-1:-1:-1;2289:4:6;;1513:808;-1:-1:-1;;1513:808:6:o;2246:70::-;-1:-1:-1;2311:5:6;;1513:808;-1:-1:-1;;1513:808:6:o;2325:2571::-;2444:4;2456:20;2479;:10;:3;:8;:10::i;:20::-;2456:43;;2505:22;2530:20;:10;:3;:8;:10::i;:20::-;2634:2;2621:16;;2615:23;2505:45;;-1:-1:-1;2656:13:6;;2695:1;2685:11;;;2681:2135;;2725:14;2759:1;2742:7;:14;:18;;;;:::i;:::-;2725:35;;2768:22;2793:41;2808:7;2817:1;2820:6;2828:5;2793:14;:41::i;:::-;2768:66;;2842:20;2865:54;2880:4;:8;;;2890:4;:13;;;2905:6;2913:5;2865:14;:54::i;:::-;2842:77;;2974:9;2964:20;;;;;;2941:4;:18;;;2931:29;;;;;;:53;2927:221;;3034:7;3024:18;;;;;;3010:9;3000:20;;;;;;:42;2996:59;;3051:4;3044:11;;;;;;;;;;2996:59;3108:18;;;;;;3079:24;3093:9;3079:13;:24::i;:::-;3069:35;;;;;;:57;3065:74;;3135:4;3128:11;;;;;;;;;;3065:74;2698:456;;;2681:2135;;;3164:6;3174:1;3164:11;3160:1656;;3203:22;3228:48;3243:7;3252:1;3255:7;:14;3271:4;3228:14;:48::i;:::-;3322:8;;;;3332:13;;;;3347:15;;3203:73;;-1:-1:-1;3284:20:6;;3307:79;;3322:8;3332:13;3347:31;;3332:13;;3347:31;:::i;:::-;3380:5;3307:14;:79::i;:::-;3284:102;;3441:9;3431:20;;;;;;3408:4;:18;;;3398:29;;;;;;:53;3394:220;;3501:7;3491:18;;;;;;3477:9;3467:20;;;;;;:42;3463:59;;3518:4;3511:11;;;;;;;;;3463:59;3574:18;;;;;;3546:23;3559:9;3546:12;:23::i;:::-;3536:34;;;;;;:56;3532:73;;3601:4;3594:11;;;;;;;;;3532:73;3177:443;;3160:1656;;;3630:6;3640:1;3630:11;3626:1190;;3675:23;3718:1;3701:7;:14;:18;;;;:::i;:::-;3675:44;;3727:27;3757:50;3772:7;3781:1;3784:15;3801:5;3757:14;:50::i;:::-;3727:80;;3815:20;3838:63;3853:4;:8;;;3863:4;:13;;;3878:15;3895:5;3838:14;:63::i;:::-;3815:86;;3952:7;3942:18;;;;;;3923:14;3913:25;;;;;;:47;:113;;;-1:-1:-1;4008:18:6;;;;;;3974:29;3988:14;3974:13;:29::i;:::-;3964:40;;;;;;:62;3913:113;3909:284;;;3401:2:0;3390:14;;3384:21;4038:36:6;;4084:13;;;:32;;4101:15;;4084:13;:32;;4101:15;;4084:32;:::i;:::-;;;-1:-1:-1;4126:15:6;;;:20;;4145:1;;4126:15;:20;;4145:1;;4126:20;:::i;:::-;;;-1:-1:-1;4163:21:6;4179:4;4163:15;:21::i;:::-;4156:28;;;;;;;;;;3626:1190;4209:6;4219:1;4209:11;4205:611;;4279:14;;4253:23;4331:49;4279:7;4253:23;4279:14;4375:4;4331:14;:49::i;4205:611::-;4786:23;;-1:-1:-1;;;4786:23:6;;16957:2:26;4786:23:6;;;16939:21:26;16996:2;16976:18;;;16969:30;-1:-1:-1;;;17015:18:26;;;17008:43;17068:18;;4786:23:6;16755:337:26;4205:611:6;4825:4;:18;;;:25;4854:1;4825:30;4821:70;;4864:4;4857:11;;;;;;;4821:70;4886:5;4879:12;;;;;;;1237:160:1;1333:9;;1384:8;;1370:11;;;;1299:4;;1333:9;1370:22;;;:::i;:::-;1355:4;:12;;;:37;1348:44;;;1237:160;;;:::o;5404:433::-;5493:8;;5465:12;;5485:58;;;;-1:-1:-1;;;5485:58:1;;17299:2:26;5485:58:1;;;17281:21:26;17338:2;17318:18;;;17311:30;17377:34;17357:18;;;17350:62;-1:-1:-1;;;17428:18:26;;;17421:31;17469:19;;5485:58:1;17097:397:26;5485:58:1;5550:14;5567:27;5582:4;:11;;;5567:14;:27::i;:::-;5550:44;;5600:11;5625:6;5614:4;:8;;;:17;;;;:::i;:::-;5600:31;;5652:19;5684:3;-1:-1:-1;;;;;5674:14:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5674:14:1;;5652:36;;5695:15;5754:6;5748:4;5744:17;5733:28;;5773:40;5792:6;5778:4;:11;;;:20;;;;:::i;:::-;5800:7;5809:3;5773:4;:40::i;1590:369:2:-;1745:4;1739:11;;-1:-1:-1;;;1782:55:2;;1777:2;1770:10;;1763:75;1871:2;1864:10;;1851:24;;;1650:12;;1929:23;1739:11;1929;:23::i;4318:225:1:-;4440:8;;4381:7;;4452:2;4440:14;4432:62;;;;-1:-1:-1;;;4432:62:1;;17701:2:26;4432:62:1;;;17683:21:26;17740:2;17720:18;;;17713:30;17779:34;17759:18;;;17752:62;-1:-1:-1;;;17830:18:26;;;17823:33;17873:19;;4432:62:1;17499:399:26;4432:62:1;4524:12;4531:4;4524:6;:12::i;4808:547:2:-;4893:5;4919:4;4944;4959:164;4972:2;4965:3;:9;4959:164;;5041:10;;5028:24;;5079:10;5087:2;5035:4;5079:10;:::i;:::-;;-1:-1:-1;5103:9:2;5110:2;5103:9;;:::i;:::-;;-1:-1:-1;4976:9:2;4983:2;4976:9;;:::i;:::-;;;4959:164;;;5133:9;5165:1;5153:8;5158:3;5153:2;:8;:::i;:::-;5145:17;;:3;:17;:::i;:::-;:21;;;;:::i;:::-;5218:10;;5273:11;;5269:22;;5230:9;;5214:26;5317:21;;;;5304:35;;;-1:-1:-1;;;;;4808:547:2:o;3019:285:1:-;3095:8;;3079:4;;3095:13;;3091:31;;-1:-1:-1;3117:5:1;;3019:285;-1:-1:-1;3019:285:1:o;3091:31::-;3163:11;;;;3214:13;;3129:11;3206:22;;319:4;3244:24;;3240:42;;;-1:-1:-1;3277:5:1;;3019:285;-1:-1:-1;;;3019:285:1:o;3240:42::-;-1:-1:-1;3295:4:1;;3019:285;-1:-1:-1;;;3019:285:1:o;7488:473::-;7618:13;;7550:7;;7610:22;;234:4;7648:26;;7644:312;;;-1:-1:-1;7683:1:1;;7488:473;-1:-1:-1;;7488:473:1:o;7644:312::-;277:4;7699:25;;;:83;;-1:-1:-1;319:4:1;7729:25;;;;;:52;;-1:-1:-1;360:4:1;7758:23;;7729:52;7695:261;;;-1:-1:-1;7791:1:1;;7488:473;-1:-1:-1;;7488:473:1:o;7695:261::-;319:4;7807:24;;7803:153;;;7879:21;7899:1;277:4;7879:21;:::i;:::-;7870:31;;;;:5;:31;:::i;:::-;:35;;7904:1;7870:35;:::i;7803:153::-;7932:19;7950:1;360:4;7932:19;:::i;6363:1077::-;6511:13;;6422:7;;;;6503:22;;234:4;6541:26;;6537:878;;;6579:1;6569:11;;6537:878;;;277:4;6595:25;;6591:824;;;6632:26;234:4;6632:5;:26;:::i;:::-;:30;;6661:1;6632:30;:::i;:::-;6622:40;;6591:824;;;319:4;6677:24;;6673:742;;;6756:4;6749:5;6745:16;6827:1;6819:6;6815:14;6805:24;;6950:7;6946:2;6942:16;6937:3;6933:26;6924:6;6918:13;6914:46;7039:1;7030:7;7026:15;7017:7;7013:29;7002:40;;;;6673:742;;;360:4;7066:23;;7062:353;;;7109:24;319:4;7109:5;:24;:::i;7062:353::-;7239:1;7227:14;;;;7270:13;7298:2;7294:16;;;7203:4;7294:16;7289:3;7285:26;7266:46;;7372:29;;;-1:-1:-1;;7372:29:1;;7428:7;-1:-1:-1;;6363:1077:1:o;2415:504::-;2475:16;2507:12;2514:4;2507:6;:12::i;:::-;2499:58;;;;-1:-1:-1;;;2499:58:1;;18261:2:26;2499:58:1;;;18243:21:26;18300:2;18280:18;;;18273:30;18339:34;18319:18;;;18312:62;-1:-1:-1;;;18390:18:26;;;18383:31;18431:19;;2499:58:1;18059:397:26;2499:58:1;2564:13;2580:14;2589:4;2580:8;:14::i;:::-;2564:30;;2600:23;2640:5;-1:-1:-1;;;;;2626:20:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2626:20:1;;;;;;;;;;;;;;;;2600:46;;2653:14;2684:27;2699:4;:11;;;2684:14;:27::i;:::-;2670:4;:11;;;:41;;;;:::i;:::-;2653:58;-1:-1:-1;2717:15:1;;2738:157;2762:5;2758:1;:9;2738:157;;;2792:19;2804:6;2792:11;:19::i;:::-;2782:29;;2831:24;;;;;;;;2839:7;2831:24;;;;2848:6;2831:24;;;2819:6;2826:1;2819:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;2872:16;2881:7;2872:6;:16;:::i;:::-;2863:25;-1:-1:-1;2769:3:1;;;;:::i;:::-;;;;2738:157;;;-1:-1:-1;2908:6:1;;2415:504;-1:-1:-1;;;;;2415:504:1:o;5036:819:6:-;5177:12;5197:13;5213:11;5222:2;5213:6;:11;:::i;:::-;5197:27;-1:-1:-1;5230:12:6;5252:11;5261:2;5252:6;:11;:::i;:::-;5251:17;;5267:1;5251:17;:::i;:::-;5245:23;;:3;:23;:::i;:::-;5230:38;-1:-1:-1;5288:2:6;5274:11;;;5369:6;-1:-1:-1;;;;;5359:17:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5359:17:6;;5336:40;;5420:4;5413:5;5409:16;5399:26;;5436:17;5433:149;;;5510:16;;;5504:23;-1:-1:-1;;;;;5490:39:6;5471:17;;;5464:66;5571:2;5562:12;;;;5545:1;;-1:-1:-1;5433:149:6;5613:2;5590:176;5630:5;5627:1;5624:12;5590:176;;;5712:16;;;5706:23;5687:17;;;5680:50;5755:2;5746:12;;;;5659:1;5652:9;5590:176;;;5594:29;5837:3;5829:6;5825:16;5819:23;5813:4;5809:34;5803:4;5799:45;5793:3;5784:7;5780:17;5773:72;5391:460;;;;;;5036:819;;;;;;:::o;6036:377::-;6101:12;6121:14;6138:4;:11;6152:1;6138:15;;;;:::i;:::-;6121:32;;6159:21;6193:6;-1:-1:-1;;;;;6183:17:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6183:17:6;;6159:41;;6212:9;6207:181;6231:4;:11;6227:1;:15;6207:181;;;6258:14;6274;6292:19;6303:4;6308:1;6303:7;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;6303:7:6;5982:1;5978:9;;;;-1:-1:-1;;;;;6005:17:6;;;;5859:173;6292:19;6257:54;;-1:-1:-1;6257:54:6;-1:-1:-1;6257:54:6;6319:8;6328:5;:1;6332;6328:5;:::i;:::-;6319:15;;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;;;;;6319:25:6;;;;;;;;-1:-1:-1;6374:7:6;6352:8;6361:5;:1;6365;6361:5;:::i;:::-;:9;;6369:1;6361:9;:::i;:::-;6352:19;;;;;;;;:::i;:::-;;;;:29;-1:-1:-1;;;;;6352:29:6;;;;;;;;;6249:139;;6244:3;;;;;:::i;:::-;;;;6207:181;;;-1:-1:-1;6400:8:6;6036:377;-1:-1:-1;;;6036:377:6:o;6417:407::-;6481:12;6501:14;6536:1;6518:4;:11;6532:1;6518:15;;;;:::i;:::-;:19;;;;:::i;:::-;6501:36;;6543:21;6577:6;-1:-1:-1;;;;;6567:17:6;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6567:17:6;;6543:41;;6604:4;6609:1;6604:7;;;;;;;;:::i;:::-;;;;;;;;;6590:8;6599:1;6590:11;;;;;;;;:::i;:::-;;;;:21;-1:-1:-1;;;;;6590:21:6;;;;;;;;-1:-1:-1;6635:1:6;6618:181;6642:4;:11;6638:1;:15;6618:181;;;6669:14;6685;6703:19;6714:4;6719:1;6714:7;;;;;;;;:::i;6703:19::-;6668:54;;-1:-1:-1;6668:54:6;-1:-1:-1;6668:54:6;6730:8;6747:1;6739:5;:1;6743;6739:5;:::i;:::-;:9;;;;:::i;:::-;6730:19;;;;;;;;:::i;:::-;;;;:29;-1:-1:-1;;;;;6730:29:6;;;;;;;;-1:-1:-1;6785:7:6;6767:8;6776:5;:1;6780;6776:5;:::i;:::-;6767:15;;;;;;;;:::i;:::-;;;;:25;-1:-1:-1;;;;;6767:25:6;;;;;;;;;6660:139;;6655:3;;;;;:::i;:::-;;;;6618:181;;8107:693:1;8218:3;8225:1;8218:8;8214:21;;8107:693;;;:::o;8214:21::-;8288:170;395:2;8295:16;;8288:170;;8375:10;;8362:24;;395:2;8406:16;;;;8432:17;;;;-1:-1:-1;;8313:16:1;8288:170;;;8631:10;;8698:11;;395:2;8565:15;;;;8559:3;:22;-1:-1:-1;;8559:26:1;8643:9;;8627:26;;;8694:22;;8760:21;;;;8747:35;;8107:693::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:26:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:255;218:2;212:9;260:6;248:19;;-1:-1:-1;;;;;282:34:26;;318:22;;;279:62;276:88;;;344:18;;:::i;:::-;380:2;373:22;146:255;:::o;406:253::-;478:2;472:9;520:4;508:17;;-1:-1:-1;;;;;540:34:26;;576:22;;;537:62;534:88;;;602:18;;:::i;664:275::-;735:2;729:9;800:2;781:13;;-1:-1:-1;;777:27:26;765:40;;-1:-1:-1;;;;;820:34:26;;856:22;;;817:62;814:88;;;882:18;;:::i;:::-;918:2;911:22;664:275;;-1:-1:-1;664:275:26:o;944:173::-;1012:20;;-1:-1:-1;;;;;1061:31:26;;1051:42;;1041:70;;1107:1;1104;1097:12;1041:70;944:173;;;:::o;1122:530::-;1164:5;1217:3;1210:4;1202:6;1198:17;1194:27;1184:55;;1235:1;1232;1225:12;1184:55;1271:6;1258:20;-1:-1:-1;;;;;1293:2:26;1290:26;1287:52;;;1319:18;;:::i;:::-;1363:55;1406:2;1387:13;;-1:-1:-1;;1383:27:26;1412:4;1379:38;1363:55;:::i;:::-;1443:2;1434:7;1427:19;1489:3;1482:4;1477:2;1469:6;1465:15;1461:26;1458:35;1455:55;;;1506:1;1503;1496:12;1455:55;1571:2;1564:4;1556:6;1552:17;1545:4;1536:7;1532:18;1519:55;1619:1;1594:16;;;1612:4;1590:27;1583:38;;;;1598:7;1122:530;-1:-1:-1;;;1122:530:26:o;1657:171::-;1724:20;;-1:-1:-1;;;;;1773:30:26;;1763:41;;1753:69;;1818:1;1815;1808:12;1833:1748;1891:5;1939:6;1927:9;1922:3;1918:19;1914:32;1911:52;;;1959:1;1956;1949:12;1911:52;1981:22;;:::i;:::-;1972:31;;2039:9;2026:23;2019:5;2012:38;2110:2;2099:9;2095:18;2082:32;2077:2;2070:5;2066:14;2059:56;2175:2;2164:9;2160:18;2147:32;2142:2;2135:5;2131:14;2124:56;2212:38;2246:2;2235:9;2231:18;2212:38;:::i;:::-;2207:2;2200:5;2196:14;2189:62;2312:3;2301:9;2297:19;2284:33;2278:3;2271:5;2267:15;2260:58;2379:3;2368:9;2364:19;2351:33;2345:3;2338:5;2334:15;2327:58;2446:3;2435:9;2431:19;2418:33;2412:3;2405:5;2401:15;2394:58;2503:3;2492:9;2488:19;2475:33;-1:-1:-1;;;;;2568:2:26;2560:6;2557:14;2554:34;;;2584:1;2581;2574:12;2554:34;2621:45;2662:3;2653:6;2642:9;2638:22;2621:45;:::i;:::-;2615:3;2604:15;;2597:70;2686:3;2734:18;;;2721:32;2705:14;;;2698:56;2773:3;2821:18;;;2808:32;2792:14;;;2785:56;2860:3;2908:18;;;2895:32;2879:14;;;2872:56;2947:3;2995:18;;;2982:32;2966:14;;;2959:56;3034:3;3082:18;;;3069:32;3053:14;;;3046:56;3121:3;;-1:-1:-1;3162:18:26;;;3149:32;3193:16;;;3190:36;;;3222:1;3219;3212:12;3190:36;3258:47;3301:3;3290:8;3279:9;3275:24;3258:47;:::i;:::-;3253:2;3246:5;3242:14;3235:71;;;;3325:3;3388:2;3377:9;3373:18;3360:32;3355:2;3348:5;3344:14;3337:56;;3412:3;3447:37;3480:2;3469:9;3465:18;3447:37;:::i;:::-;3442:2;3435:5;3431:14;3424:61;;3505:3;3569;3558:9;3554:19;3541:33;3535:3;3528:5;3524:15;3517:58;;1833:1748;;;;:::o;3586:941::-;3638:5;3691:3;3684:4;3676:6;3672:17;3668:27;3658:55;;3709:1;3706;3699:12;3658:55;3745:6;3732:20;3771:4;-1:-1:-1;;;;;3831:2:26;3827;3824:10;3821:36;;;3837:18;;:::i;:::-;3883:2;3880:1;3876:10;3906:28;3930:2;3926;3922:11;3906:28;:::i;:::-;3968:15;;;4038;;;4034:24;;;3999:12;;;;4070:15;;;4067:35;;;4098:1;4095;4088:12;4067:35;4134:2;4126:6;4122:15;4111:26;;4146:352;4162:6;4157:3;4154:15;4146:352;;;4248:3;4235:17;4284:2;4271:11;4268:19;4265:109;;;4328:1;4357:2;4353;4346:14;4265:109;4399:56;4451:3;4446:2;4432:11;4424:6;4420:24;4416:33;4399:56;:::i;:::-;4387:69;;-1:-1:-1;4179:12:26;;;;4476;;;;4146:352;;;4516:5;3586:941;-1:-1:-1;;;;;;;;3586:941:26:o;4532:942::-;4590:5;4638:4;4626:9;4621:3;4617:19;4613:30;4610:50;;;4656:1;4653;4646:12;4610:50;4678:22;;:::i;:::-;4669:31;;4736:9;4723:23;4716:5;4709:38;4798:2;4787:9;4783:18;4770:32;-1:-1:-1;;;;;4862:2:26;4854:6;4851:14;4848:34;;;4878:1;4875;4868:12;4848:34;4914:45;4955:3;4946:6;4935:9;4931:22;4914:45;:::i;:::-;4909:2;4902:5;4898:14;4891:69;5013:2;5002:9;4998:18;4985:32;4969:48;;5042:2;5032:8;5029:16;5026:36;;;5058:1;5055;5048:12;5026:36;5094:57;5147:3;5136:8;5125:9;5121:24;5094:57;:::i;:::-;5089:2;5082:5;5078:14;5071:81;5212:2;5201:9;5197:18;5184:32;5179:2;5172:5;5168:14;5161:56;5278:3;5267:9;5263:19;5250:33;5244:3;5237:5;5233:15;5226:58;5337:3;5326:9;5322:19;5309:33;5293:49;;5367:2;5357:8;5354:16;5351:36;;;5383:1;5380;5373:12;5351:36;;5420:47;5463:3;5452:8;5441:9;5437:24;5420:47;:::i;:::-;5414:3;5407:5;5403:15;5396:72;;4532:942;;;;:::o;5479:886::-;5641:6;5649;5657;5665;5673;5681;5734:3;5722:9;5713:7;5709:23;5705:33;5702:53;;;5751:1;5748;5741:12;5702:53;5791:9;5778:23;-1:-1:-1;;;;;5861:2:26;5853:6;5850:14;5847:34;;;5877:1;5874;5867:12;5847:34;5900:62;5954:7;5945:6;5934:9;5930:22;5900:62;:::i;:::-;5890:72;;6015:2;6004:9;6000:18;5987:32;5971:48;;6044:2;6034:8;6031:16;6028:36;;;6060:1;6057;6050:12;6028:36;;6083:64;6139:7;6128:8;6117:9;6113:24;6083:64;:::i;:::-;6073:74;;;6194:2;6183:9;6179:18;6166:32;6156:42;;6245:2;6234:9;6230:18;6217:32;6207:42;;6296:3;6285:9;6281:19;6268:33;6258:43;;6320:39;6354:3;6343:9;6339:19;6320:39;:::i;:::-;6310:49;;5479:886;;;;;;;;:::o;6370:423::-;6412:3;6450:5;6444:12;6477:6;6472:3;6465:19;6502:1;6512:162;6526:6;6523:1;6520:13;6512:162;;;6588:4;6644:13;;;6640:22;;6634:29;6616:11;;;6612:20;;6605:59;6541:12;6512:162;;;6516:3;6719:1;6712:4;6703:6;6698:3;6694:16;6690:27;6683:38;6782:4;6775:2;6771:7;6766:2;6758:6;6754:15;6750:29;6745:3;6741:39;6737:50;6730:57;;;6370:423;;;;:::o;6798:301::-;6983:6;6976:14;6969:22;6958:9;6951:41;7028:2;7023;7012:9;7008:18;7001:30;6932:4;7048:45;7089:2;7078:9;7074:18;7066:6;7048:45;:::i;:::-;7040:53;6798:301;-1:-1:-1;;;;6798:301:26:o;7104:353::-;7192:6;7245:2;7233:9;7224:7;7220:23;7216:32;7213:52;;;7261:1;7258;7251:12;7213:52;7301:9;7288:23;-1:-1:-1;;;;;7326:6:26;7323:30;7320:50;;;7366:1;7363;7356:12;7320:50;7389:62;7443:7;7434:6;7423:9;7419:22;7389:62;:::i;7654:353::-;7742:6;7795:2;7783:9;7774:7;7770:23;7766:32;7763:52;;;7811:1;7808;7801:12;7763:52;7851:9;7838:23;-1:-1:-1;;;;;7876:6:26;7873:30;7870:50;;;7916:1;7913;7906:12;7870:50;7939:62;7993:7;7984:6;7973:9;7969:22;7939:62;:::i;8194:320::-;8262:6;8315:2;8303:9;8294:7;8290:23;8286:32;8283:52;;;8331:1;8328;8321:12;8283:52;8371:9;8358:23;-1:-1:-1;;;;;8396:6:26;8393:30;8390:50;;;8436:1;8433;8426:12;8390:50;8459:49;8500:7;8491:6;8480:9;8476:22;8459:49;:::i;8948:218::-;9095:2;9084:9;9077:21;9058:4;9115:45;9156:2;9145:9;9141:18;9133:6;9115:45;:::i;9387:1939::-;9574:2;9563:9;9556:21;9619:6;9613:13;9608:2;9597:9;9593:18;9586:41;9681:2;9673:6;9669:15;9663:22;9658:2;9647:9;9643:18;9636:50;9740:2;9732:6;9728:15;9722:22;9717:2;9706:9;9702:18;9695:50;9537:4;9792:2;9784:6;9780:15;9774:22;9805:53;9853:3;9842:9;9838:19;9824:12;-1:-1:-1;;;;;9237:31:26;9225:44;;9171:104;9805:53;;9913:3;9905:6;9901:16;9895:23;9889:3;9878:9;9874:19;9867:52;9974:3;9966:6;9962:16;9956:23;9950:3;9939:9;9935:19;9928:52;10035:3;10027:6;10023:16;10017:23;10011:3;10000:9;9996:19;9989:52;10090:3;10082:6;10078:16;10072:23;10114:6;10139:3;10178:2;10173;10162:9;10158:18;10151:30;10204:54;10253:3;10242:9;10238:19;10222:14;10204:54;:::i;:::-;10283:15;;;10277:22;10318:3;10337:18;;;10330:30;;;;10385:15;;10379:22;10420:3;10439:18;;;10432:30;;;;10487:15;;10481:22;10522:3;10541:18;;;10534:30;;;;10589:15;;10583:22;10625:3;10644:19;;;10637:31;;;;10694:16;;10688:23;10731:3;10750:19;;;10743:32;;;;10812:16;;10806:23;10893:22;;;-1:-1:-1;;10889:36:26;10849:3;10868:19;;;10861:65;;;;10190:68;;-1:-1:-1;10806:23:26;10949:41;10190:68;10806:23;10949:41;:::i;:::-;11016:16;;;11010:23;11053:3;11072:19;;;11065:32;;;;11134:16;;11128:23;10935:55;;-1:-1:-1;11128:23:26;-1:-1:-1;11171:3:26;11183:54;11217:19;;;11128:23;-1:-1:-1;;;;;9345:30:26;9333:43;;9280:102;11183:54;11279:16;;;;11273:23;11253:18;;11246:51;;;;-1:-1:-1;11314:6:26;9387:1939;-1:-1:-1;9387:1939:26:o;11331:127::-;11392:10;11387:3;11383:20;11380:1;11373:31;11423:4;11420:1;11413:15;11447:4;11444:1;11437:15;12802:127;12863:10;12858:3;12854:20;12851:1;12844:31;12894:4;12891:1;12884:15;12918:4;12915:1;12908:15;12934:135;12973:3;12994:17;;;12991:43;;13014:18;;:::i;:::-;-1:-1:-1;13061:1:26;13050:13;;12934:135::o;13490:128::-;13557:9;;;13578:11;;;13575:37;;;13592:18;;:::i;13623:125::-;13688:9;;;13709:10;;;13706:36;;;13722:18;;:::i;13753:127::-;13814:10;13809:3;13805:20;13802:1;13795:31;13845:4;13842:1;13835:15;13869:4;13866:1;13859:15;13885:120;13925:1;13951;13941:35;;13956:18;;:::i;:::-;-1:-1:-1;13990:9:26;;13885:120::o;14010:168::-;14050:7;14116:1;14112;14108:6;14104:14;14101:1;14098:21;14093:1;14086:9;14079:17;14075:45;14072:71;;;14123:18;;:::i;:::-;-1:-1:-1;14163:9:26;;14010:168::o;14183:422::-;14272:1;14315:5;14272:1;14329:270;14350:7;14340:8;14337:21;14329:270;;;14409:4;14405:1;14401:6;14397:17;14391:4;14388:27;14385:53;;;14418:18;;:::i;:::-;14468:7;14458:8;14454:22;14451:55;;;14488:16;;;;14451:55;14567:22;;;;14527:15;;;;14329:270;;;14333:3;14183:422;;;;;:::o;14610:806::-;14659:5;14689:8;14679:80;;-1:-1:-1;14730:1:26;14744:5;;14679:80;14778:4;14768:76;;-1:-1:-1;14815:1:26;14829:5;;14768:76;14860:4;14878:1;14873:59;;;;14946:1;14941:130;;;;14853:218;;14873:59;14903:1;14894:10;;14917:5;;;14941:130;14978:3;14968:8;14965:17;14962:43;;;14985:18;;:::i;:::-;-1:-1:-1;;15041:1:26;15027:16;;15056:5;;14853:218;;15155:2;15145:8;15142:16;15136:3;15130:4;15127:13;15123:36;15117:2;15107:8;15104:16;15099:2;15093:4;15090:12;15086:35;15083:77;15080:159;;;-1:-1:-1;15192:19:26;;;15224:5;;15080:159;15271:34;15296:8;15290:4;15271:34;:::i;:::-;15341:6;15337:1;15333:6;15329:19;15320:7;15317:32;15314:58;;;15352:18;;:::i;:::-;15390:20;;14610:806;-1:-1:-1;;;14610:806:26:o;15421:131::-;15481:5;15510:36;15537:8;15531:4;15510:36;:::i;15557:112::-;15589:1;15615;15605:35;;15620:18;;:::i;:::-;-1:-1:-1;15654:9:26;;15557:112::o;17903:151::-;17993:4;17986:12;;;17972;;;17968:31;;18011:14;;18008:40;;;18028:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "bytesToBytes32(bytes)": "bfe370d9",
    "getBlockHash((bytes32,bytes32,bytes32,address,bytes32,bytes32,bytes32,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes32,uint64,uint256))": "895308fa",
    "getBlockRlpData((bytes32,bytes32,bytes32,address,bytes32,bytes32,bytes32,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes32,uint64,uint256))": "d76f7f0d",
    "getTransactionHash(bytes)": "a2deadbd",
    "toAccount(bytes)": "b3dd6a0a",
    "toBlockHeader(bytes)": "e7617bf8",
    "verifyAccount((bytes32,bytes32,bytes32,address,bytes32,bytes32,bytes32,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes32,uint64,uint256),(bytes32,bytes,bytes[],uint256,uint256,bytes),uint256,uint256,uint256,address)": "4d11c6f6",
    "verifyTrieProof((bytes32,bytes,bytes[],uint256,uint256,bytes))": "55eff580"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"bytesToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"result\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sha3Uncles\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"transactionsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"receiptsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"logsBloom\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"mixHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalDifficulty\",\"type\":\"uint256\"}],\"internalType\":\"struct EthereumDecoder.BlockHeader\",\"name\":\"header\",\"type\":\"tuple\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sha3Uncles\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"transactionsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"receiptsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"logsBloom\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"mixHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalDifficulty\",\"type\":\"uint256\"}],\"internalType\":\"struct EthereumDecoder.BlockHeader\",\"name\":\"header\",\"type\":\"tuple\"}],\"name\":\"getBlockRlpData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signedTransaction\",\"type\":\"bytes\"}],\"name\":\"getTransactionHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toAccount\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"storageRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"codeHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct EthereumDecoder.Account\",\"name\":\"account\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBlockHeader\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sha3Uncles\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"transactionsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"receiptsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"logsBloom\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"mixHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalDifficulty\",\"type\":\"uint256\"}],\"internalType\":\"struct EthereumDecoder.BlockHeader\",\"name\":\"header\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parentHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sha3Uncles\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"miner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"transactionsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"receiptsRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"logsBloom\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"difficulty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"mixHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"totalDifficulty\",\"type\":\"uint256\"}],\"internalType\":\"struct EthereumDecoder.BlockHeader\",\"name\":\"header\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"expectedRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"proof\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"keyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proofIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"expectedValue\",\"type\":\"bytes\"}],\"internalType\":\"struct MPT.MerkleProof\",\"name\":\"accountdata\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"codeHash\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"storageHash\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"verifyAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"expectedRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"proof\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"keyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proofIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"expectedValue\",\"type\":\"bytes\"}],\"internalType\":\"struct MPT.MerkleProof\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"verifyTrieProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/Prover.sol\":\"Prover\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/contracts/Prover.sol\":{\"keccak256\":\"0x0d99ea430756bf5d4cec489762f22568d28f6c4fd34d821f71e2d51f8745cfc7\",\"urls\":[\"bzz-raw://1e9bdd05fbafa0f7658f0480bf4f34ac98f7e23b1f41d1a297668c4273cf10b5\",\"dweb:/ipfs/QmNy1nggEdo29wjU1EMEKTbvBV8wVcHvzR4KBGGjyrw6oV\"]},\"contracts/contracts/external_lib/RLPDecode.sol\":{\"keccak256\":\"0x41438e47225a0e3f03d39bc52e79b321da6770b72780baa6a8eff1df4dc8efa4\",\"urls\":[\"bzz-raw://81b18d7c0b600c28e1755e2cf666fead25d010d94b316ca6334574c29bbc95e4\",\"dweb:/ipfs/QmZtqiJWHrGLed3PN5LnXqzqVR4f2xdryvXKcyuDw9xpK7\"]},\"contracts/contracts/external_lib/RLPEncode.sol\":{\"keccak256\":\"0xa4a9b69f1f69a80f9513f951b818ed15d01e88c35f46f60ef93b6d09b4c300e4\",\"urls\":[\"bzz-raw://d3fbe3c505767cab908190f36c5806cb75eec4397770acc6c2b932949253991f\",\"dweb:/ipfs/QmVdAG9ppeV9ujcg1jaBFFxYQ615nT7MtPx4g3jqpc13FW\"]},\"contracts/contracts/interface/iProver.sol\":{\"keccak256\":\"0xf720d9b0274047daed1e4bb1a1626b0e37d9794136255c8ad1c4603a47e53090\",\"urls\":[\"bzz-raw://5c6863df54a4232cb7471609fb4197197b16f6ed2dbf98d0376ab0fbd04d5ef3\",\"dweb:/ipfs/QmdGGXWctZdUkYToDQk9R5YMZCuvRRtsmrJaLTqKUQKyDA\"]},\"contracts/contracts/lib/ECVerify.sol\":{\"keccak256\":\"0x93a52eef51dd7ca1b70bf7c47bc54127473dbaf460b32a34f3644472b94669b8\",\"urls\":[\"bzz-raw://9a008e151fbfb602744595087adadac081b3397e74a309a40e39567b31cfc44d\",\"dweb:/ipfs/QmPH8sjruYqWPperb6Lq3Cor9d6Z9cnhDaxvQtfwRJyUwV\"]},\"contracts/contracts/lib/EthereumDecoder.sol\":{\"keccak256\":\"0x7a0a4f551165fcf2c6b23b0b713a841150520266e36e40e4c1ae7284ce7d9296\",\"urls\":[\"bzz-raw://37446cf626c6a343740314ab5067eb161f40fdca1fa0e7064f22d04e7e884d97\",\"dweb:/ipfs/QmbnTWFcGC2Ag6LYwWhemMckPDRvQXtXf4mnXaoEw3SxPW\"]},\"contracts/contracts/lib/MPT.sol\":{\"keccak256\":\"0x90280b71ac1b25404a26b1c8c1dade243081ba13ee656184c26f51862ae85d1a\",\"urls\":[\"bzz-raw://2d0a378df84955c226a7c82ca3a74e334b77a16865e3021801e5783a1079ae35\",\"dweb:/ipfs/QmPSNp4e6YVvtcr2dMjSgmHkd7EgqzzCXRdLJFrnJLgZ2U\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bytesToBytes32",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "result",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct EthereumDecoder.BlockHeader",
              "name": "header",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "sha3Uncles",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "miner",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "transactionsRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "receiptsRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "logsBloom",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "difficulty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "number",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasUsed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "mixHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "nonce",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "totalDifficulty",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getBlockHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct EthereumDecoder.BlockHeader",
              "name": "header",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "sha3Uncles",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "miner",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "transactionsRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "receiptsRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "logsBloom",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "difficulty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "number",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasUsed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "mixHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "nonce",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "totalDifficulty",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getBlockRlpData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "signedTransaction",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTransactionHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "toAccount",
          "outputs": [
            {
              "internalType": "struct EthereumDecoder.Account",
              "name": "account",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "storageRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "codeHash",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "toBlockHeader",
          "outputs": [
            {
              "internalType": "struct EthereumDecoder.BlockHeader",
              "name": "header",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "sha3Uncles",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "miner",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "transactionsRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "receiptsRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "logsBloom",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "difficulty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "number",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasUsed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "mixHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "nonce",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "totalDifficulty",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct EthereumDecoder.BlockHeader",
              "name": "header",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "parentHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "sha3Uncles",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "miner",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "transactionsRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "receiptsRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "logsBloom",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "difficulty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "number",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasUsed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes32",
                  "name": "mixHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "nonce",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "totalDifficulty",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct MPT.MerkleProof",
              "name": "accountdata",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "expectedRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "key",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes[]",
                  "name": "proof",
                  "type": "bytes[]"
                },
                {
                  "internalType": "uint256",
                  "name": "keyIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "proofIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "expectedValue",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "codeHash",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "storageHash",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "verifyAccount",
          "outputs": [
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MPT.MerkleProof",
              "name": "data",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "expectedRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "key",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes[]",
                  "name": "proof",
                  "type": "bytes[]"
                },
                {
                  "internalType": "uint256",
                  "name": "keyIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "proofIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "expectedValue",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyTrieProof",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/contracts/Prover.sol": "Prover"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/contracts/Prover.sol": {
        "keccak256": "0x0d99ea430756bf5d4cec489762f22568d28f6c4fd34d821f71e2d51f8745cfc7",
        "urls": [
          "bzz-raw://1e9bdd05fbafa0f7658f0480bf4f34ac98f7e23b1f41d1a297668c4273cf10b5",
          "dweb:/ipfs/QmNy1nggEdo29wjU1EMEKTbvBV8wVcHvzR4KBGGjyrw6oV"
        ],
        "license": null
      },
      "contracts/contracts/external_lib/RLPDecode.sol": {
        "keccak256": "0x41438e47225a0e3f03d39bc52e79b321da6770b72780baa6a8eff1df4dc8efa4",
        "urls": [
          "bzz-raw://81b18d7c0b600c28e1755e2cf666fead25d010d94b316ca6334574c29bbc95e4",
          "dweb:/ipfs/QmZtqiJWHrGLed3PN5LnXqzqVR4f2xdryvXKcyuDw9xpK7"
        ],
        "license": null
      },
      "contracts/contracts/external_lib/RLPEncode.sol": {
        "keccak256": "0xa4a9b69f1f69a80f9513f951b818ed15d01e88c35f46f60ef93b6d09b4c300e4",
        "urls": [
          "bzz-raw://d3fbe3c505767cab908190f36c5806cb75eec4397770acc6c2b932949253991f",
          "dweb:/ipfs/QmVdAG9ppeV9ujcg1jaBFFxYQ615nT7MtPx4g3jqpc13FW"
        ],
        "license": null
      },
      "contracts/contracts/interface/iProver.sol": {
        "keccak256": "0xf720d9b0274047daed1e4bb1a1626b0e37d9794136255c8ad1c4603a47e53090",
        "urls": [
          "bzz-raw://5c6863df54a4232cb7471609fb4197197b16f6ed2dbf98d0376ab0fbd04d5ef3",
          "dweb:/ipfs/QmdGGXWctZdUkYToDQk9R5YMZCuvRRtsmrJaLTqKUQKyDA"
        ],
        "license": null
      },
      "contracts/contracts/lib/ECVerify.sol": {
        "keccak256": "0x93a52eef51dd7ca1b70bf7c47bc54127473dbaf460b32a34f3644472b94669b8",
        "urls": [
          "bzz-raw://9a008e151fbfb602744595087adadac081b3397e74a309a40e39567b31cfc44d",
          "dweb:/ipfs/QmPH8sjruYqWPperb6Lq3Cor9d6Z9cnhDaxvQtfwRJyUwV"
        ],
        "license": null
      },
      "contracts/contracts/lib/EthereumDecoder.sol": {
        "keccak256": "0x7a0a4f551165fcf2c6b23b0b713a841150520266e36e40e4c1ae7284ce7d9296",
        "urls": [
          "bzz-raw://37446cf626c6a343740314ab5067eb161f40fdca1fa0e7064f22d04e7e884d97",
          "dweb:/ipfs/QmbnTWFcGC2Ag6LYwWhemMckPDRvQXtXf4mnXaoEw3SxPW"
        ],
        "license": null
      },
      "contracts/contracts/lib/MPT.sol": {
        "keccak256": "0x90280b71ac1b25404a26b1c8c1dade243081ba13ee656184c26f51862ae85d1a",
        "urls": [
          "bzz-raw://2d0a378df84955c226a7c82ca3a74e334b77a16865e3021801e5783a1079ae35",
          "dweb:/ipfs/QmPSNp4e6YVvtcr2dMjSgmHkd7EgqzzCXRdLJFrnJLgZ2U"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/contracts/Prover.sol",
    "id": 250,
    "exportedSymbols": {
      "ECVerify": [
        1633
      ],
      "EthereumDecoder": [
        3110
      ],
      "MPT": [
        3906
      ],
      "Prover": [
        249
      ],
      "RLPDecode": [
        993
      ],
      "RLPEncode": [
        1526
      ],
      "iProver": [
        1560
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:3418:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "0:23:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "25:33:0",
        "absolutePath": "contracts/contracts/interface/iProver.sol",
        "file": "./interface/iProver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 250,
        "sourceUnit": 1561,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "59:28:0",
        "absolutePath": "contracts/contracts/lib/ECVerify.sol",
        "file": "./lib/ECVerify.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 250,
        "sourceUnit": 1634,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 249,
        "nodeType": "ContractDefinition",
        "src": "89:3328:0",
        "nodes": [
          {
            "id": 9,
            "nodeType": "UsingForDirective",
            "src": "120:30:0",
            "global": false,
            "libraryName": {
              "id": 6,
              "name": "MPT",
              "nameLocations": [
                "126:3:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3906,
              "src": "126:3:0"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "MPT.MerkleProof",
                "nameLocations": [
                  "134:3:0",
                  "138:11:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3135,
                "src": "134:15:0"
              },
              "referencedDeclaration": 3135,
              "src": "134:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_MerkleProof_$3135_storage_ptr",
                "typeString": "struct MPT.MerkleProof"
              }
            }
          },
          {
            "id": 13,
            "nodeType": "FunctionDefinition",
            "src": "154:16:0",
            "body": {
              "id": 12,
              "nodeType": "Block",
              "src": "168:2:0",
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "165:2:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "168:0:0"
            },
            "scope": 249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27,
            "nodeType": "FunctionDefinition",
            "src": "174:130:0",
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "264:40:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 22,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "277:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleProof_$3135_memory_ptr",
                          "typeString": "struct MPT.MerkleProof memory"
                        }
                      },
                      "id": 23,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "282:15:0",
                      "memberName": "verifyTrieProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3253,
                      "src": "277:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_MerkleProof_$3135_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_MerkleProof_$3135_memory_ptr_$",
                        "typeString": "function (struct MPT.MerkleProof memory) pure returns (bool)"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "277:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21,
                  "id": 25,
                  "nodeType": "Return",
                  "src": "270:29:0"
                }
              ]
            },
            "baseFunctions": [
              1538
            ],
            "functionSelector": "55eff580",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyTrieProof",
            "nameLocation": "183:15:0",
            "overrides": {
              "id": 18,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "240:8:0"
            },
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "222:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "199:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleProof_$3135_memory_ptr",
                    "typeString": "struct MPT.MerkleProof"
                  },
                  "typeName": {
                    "id": 15,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14,
                      "name": "MPT.MerkleProof",
                      "nameLocations": [
                        "199:3:0",
                        "203:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3135,
                      "src": "199:15:0"
                    },
                    "referencedDeclaration": 3135,
                    "src": "199:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleProof_$3135_storage_ptr",
                      "typeString": "struct MPT.MerkleProof"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "198:29:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "258:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "258:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "257:6:0"
            },
            "scope": 249,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 158,
            "nodeType": "FunctionDefinition",
            "src": "308:1349:0",
            "body": {
              "id": 157,
              "nodeType": "Block",
              "src": "578:1079:0",
              "statements": [
                {
                  "assignments": [
                    53
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53,
                      "mutability": "mutable",
                      "name": "accountState",
                      "nameLocation": "599:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 157,
                      "src": "584:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                        "typeString": "bytes[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 51,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "584:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 52,
                        "nodeType": "ArrayTypeName",
                        "src": "584:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "626:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "614:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 54,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "618:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "id": 55,
                        "nodeType": "ArrayTypeName",
                        "src": "618:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                          "typeString": "bytes[]"
                        }
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                      "typeString": "bytes memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "584:44:0"
                },
                {
                  "expression": {
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 60,
                        "name": "accountState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "634:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 62,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "647:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "634:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "673:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 63,
                          "name": "RLPEncode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1526,
                          "src": "652:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RLPEncode_$1526_$",
                            "typeString": "type(library RLPEncode)"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "662:10:0",
                        "memberName": "encodeUint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1114,
                        "src": "652:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory)"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "652:23:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "634:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "634:41:0"
                },
                {
                  "expression": {
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 69,
                        "name": "accountState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "681:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 71,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "694:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "681:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 74,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "720:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 72,
                          "name": "RLPEncode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1526,
                          "src": "699:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RLPEncode_$1526_$",
                            "typeString": "type(library RLPEncode)"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "709:10:0",
                        "memberName": "encodeUint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1114,
                        "src": "699:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory)"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "699:29:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "681:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "681:47:0"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 78,
                        "name": "accountState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "734:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 80,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "747:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "734:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 83,
                          "name": "codeHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "773:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 81,
                          "name": "RLPEncode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1526,
                          "src": "752:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RLPEncode_$1526_$",
                            "typeString": "type(library RLPEncode)"
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "762:10:0",
                        "memberName": "encodeUint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1114,
                        "src": "752:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "752:30:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "734:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "734:48:0"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87,
                        "name": "accountState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "788:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                          "typeString": "bytes memory[] memory"
                        }
                      },
                      "id": 89,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "801:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "788:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 92,
                          "name": "storageHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "827:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 90,
                          "name": "RLPEncode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1526,
                          "src": "806:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RLPEncode_$1526_$",
                            "typeString": "type(library RLPEncode)"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "816:10:0",
                        "memberName": "encodeUint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1114,
                        "src": "806:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (bytes memory)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "806:33:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "788:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "788:51:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 96,
                        "name": "header",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "850:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                          "typeString": "struct EthereumDecoder.BlockHeader memory"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "857:9:0",
                      "memberName": "stateRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1655,
                      "src": "850:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 98,
                        "name": "accountdata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "870:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MerkleProof_$3135_memory_ptr",
                          "typeString": "struct MPT.MerkleProof memory"
                        }
                      },
                      "id": 99,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "882:12:0",
                      "memberName": "expectedRoot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3123,
                      "src": "870:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "850:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 105,
                  "nodeType": "IfStatement",
                  "src": "846:104:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "904:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "7665726966794163636f756e74202d20646966666572656e74207472696520726f6f7473",
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "911:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5057065f1033830d27e3b11ce8438e46e9ff25384c9c04f674aed5f3cedd4524",
                            "typeString": "literal_string \"verifyAccount - different trie roots\""
                          },
                          "value": "verifyAccount - different trie roots"
                        }
                      ],
                      "id": 103,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "903:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_5057065f1033830d27e3b11ce8438e46e9ff25384c9c04f674aed5f3cedd4524_$",
                        "typeString": "tuple(bool,literal_string \"verifyAccount - different trie roots\")"
                      }
                    },
                    "functionReturnParameters": 48,
                    "id": 104,
                    "nodeType": "Return",
                    "src": "896:54:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 109,
                              "name": "accountState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "991:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                                "typeString": "bytes memory[] memory"
                              }
                            ],
                            "expression": {
                              "id": 107,
                              "name": "RLPEncode",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1526,
                              "src": "970:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_RLPEncode_$1526_$",
                                "typeString": "type(library RLPEncode)"
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "980:10:0",
                            "memberName": "encodeList",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1066,
                            "src": "970:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory[] memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "970:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 106,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "960:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "960:45:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 113,
                            "name": "accountdata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "1019:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MerkleProof_$3135_memory_ptr",
                              "typeString": "struct MPT.MerkleProof memory"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1031:13:0",
                          "memberName": "expectedValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3134,
                          "src": "1019:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 112,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1009:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1009:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "960:85:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 121,
                  "nodeType": "IfStatement",
                  "src": "956:147:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1055:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "7665726966794163636f756e74202d20646966666572656e74206163636f756e742064617461",
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1062:40:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f5c9771357d661f612cd8e0af2a930a6e983d29e63e861dbed1fdc05f239fa49",
                            "typeString": "literal_string \"verifyAccount - different account data\""
                          },
                          "value": "verifyAccount - different account data"
                        }
                      ],
                      "id": 119,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1054:49:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_f5c9771357d661f612cd8e0af2a930a6e983d29e63e861dbed1fdc05f239fa49_$",
                        "typeString": "tuple(bool,literal_string \"verifyAccount - different account data\")"
                      }
                    },
                    "functionReturnParameters": 48,
                    "id": 120,
                    "nodeType": "Return",
                    "src": "1047:56:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 124,
                                "name": "accountdata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33,
                                "src": "1143:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_MerkleProof_$3135_memory_ptr",
                                  "typeString": "struct MPT.MerkleProof memory"
                                }
                              },
                              "id": 125,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1155:3:0",
                              "memberName": "key",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3125,
                              "src": "1143:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 123,
                            "name": "removeEveryTwo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "1128:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bytes memory)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1128:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 122,
                        "name": "bytesToBytes32",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "1113:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) returns (bytes32)"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1113:47:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 131,
                              "name": "contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "1191:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 129,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1174:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1178:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1174:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1174:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 128,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1164:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1164:44:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1113:95:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 139,
                  "nodeType": "IfStatement",
                  "src": "1109:160:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1218:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "7665726966794163636f756e74202d20646966666572656e74206163636f756e742061646472657373",
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1225:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_7dff23bd24789a65b1607b863bdd3e0ec2d6efb1a0d3ad70ea227c34e290b657",
                            "typeString": "literal_string \"verifyAccount - different account address\""
                          },
                          "value": "verifyAccount - different account address"
                        }
                      ],
                      "id": 137,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1217:52:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_7dff23bd24789a65b1607b863bdd3e0ec2d6efb1a0d3ad70ea227c34e290b657_$",
                        "typeString": "tuple(bool,literal_string \"verifyAccount - different account address\")"
                      }
                    },
                    "functionReturnParameters": 48,
                    "id": 138,
                    "nodeType": "Return",
                    "src": "1210:59:0"
                  }
                },
                {
                  "expression": {
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 140,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1526:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 141,
                          "name": "accountdata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1534:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MerkleProof_$3135_memory_ptr",
                            "typeString": "struct MPT.MerkleProof memory"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1546:15:0",
                        "memberName": "verifyTrieProof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3253,
                        "src": "1534:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_MerkleProof_$3135_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_MerkleProof_$3135_memory_ptr_$",
                          "typeString": "function (struct MPT.MerkleProof memory) pure returns (bool)"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1534:29:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1526:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:37:0"
                },
                {
                  "condition": {
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1573:6:0",
                    "subExpression": {
                      "id": 146,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45,
                      "src": "1574:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 152,
                  "nodeType": "IfStatement",
                  "src": "1569:59:0",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "66616c7365",
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1589:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "7665726966794163636f756e74202d20696e76616c69642070726f6f66",
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1596:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_33fdaf283c79e2ce3bf9c23a5fc74748fedb1239192e2b28567ad661a2dc3b24",
                            "typeString": "literal_string \"verifyAccount - invalid proof\""
                          },
                          "value": "verifyAccount - invalid proof"
                        }
                      ],
                      "id": 150,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1588:40:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_33fdaf283c79e2ce3bf9c23a5fc74748fedb1239192e2b28567ad661a2dc3b24_$",
                        "typeString": "tuple(bool,literal_string \"verifyAccount - invalid proof\")"
                      }
                    },
                    "functionReturnParameters": 48,
                    "id": 151,
                    "nodeType": "Return",
                    "src": "1581:47:0"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "74727565",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1643:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "",
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1649:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "id": 155,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1642:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$",
                      "typeString": "tuple(bool,literal_string \"\")"
                    }
                  },
                  "functionReturnParameters": 48,
                  "id": 156,
                  "nodeType": "Return",
                  "src": "1635:17:0"
                }
              ]
            },
            "baseFunctions": [
              1559
            ],
            "functionSelector": "4d11c6f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyAccount",
            "nameLocation": "317:13:0",
            "overrides": {
              "id": 43,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "526:8:0"
            },
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "header",
                  "nameLocation": "371:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "336:41:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                    "typeString": "struct EthereumDecoder.BlockHeader"
                  },
                  "typeName": {
                    "id": 29,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28,
                      "name": "EthereumDecoder.BlockHeader",
                      "nameLocations": [
                        "336:15:0",
                        "352:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1680,
                      "src": "336:27:0"
                    },
                    "referencedDeclaration": 1680,
                    "src": "336:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BlockHeader_$1680_storage_ptr",
                      "typeString": "struct EthereumDecoder.BlockHeader"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "accountdata",
                  "nameLocation": "406:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "383:34:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MerkleProof_$3135_memory_ptr",
                    "typeString": "struct MPT.MerkleProof"
                  },
                  "typeName": {
                    "id": 32,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31,
                      "name": "MPT.MerkleProof",
                      "nameLocations": [
                        "383:3:0",
                        "387:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3135,
                      "src": "383:15:0"
                    },
                    "referencedDeclaration": 3135,
                    "src": "383:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MerkleProof_$3135_storage_ptr",
                      "typeString": "struct MPT.MerkleProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "431:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "423:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "codeHash",
                  "nameLocation": "452:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "444:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "storageHash",
                  "nameLocation": "474:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "466:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "499:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "491:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "491:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "330:188:0"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "valid",
                  "nameLocation": "549:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "544:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "570:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 158,
                  "src": "556:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "543:34:0"
            },
            "scope": 249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 172,
            "nodeType": "FunctionDefinition",
            "src": "1703:141:0",
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "1798:46:0",
              "statements": [
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 165,
                      "name": "hash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "1804:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 167,
                          "name": "signedTransaction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "1821:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 166,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "1811:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1811:28:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1804:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:35:0"
                }
              ]
            },
            "functionSelector": "a2deadbd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTransactionHash",
            "nameLocation": "1712:18:0",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "signedTransaction",
                  "nameLocation": "1744:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "1731:30:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1730:32:0"
            },
            "returnParameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1792:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "1784:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1784:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1783:14:0"
            },
            "scope": 249,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 187,
            "nodeType": "FunctionDefinition",
            "src": "1848:152:0",
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "1948:52:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 182,
                            "name": "header",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 175,
                            "src": "1987:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                              "typeString": "struct EthereumDecoder.BlockHeader memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                              "typeString": "struct EthereumDecoder.BlockHeader memory"
                            }
                          ],
                          "id": 181,
                          "name": "getBlockRlpData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 201,
                          "src": "1971:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_BlockHeader_$1680_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (struct EthereumDecoder.BlockHeader memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1971:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 180,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1961:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1961:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 179,
                  "id": 185,
                  "nodeType": "Return",
                  "src": "1954:41:0"
                }
              ]
            },
            "functionSelector": "895308fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockHash",
            "nameLocation": "1857:12:0",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "header",
                  "nameLocation": "1905:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1870:41:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                    "typeString": "struct EthereumDecoder.BlockHeader"
                  },
                  "typeName": {
                    "id": 174,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 173,
                      "name": "EthereumDecoder.BlockHeader",
                      "nameLocations": [
                        "1870:15:0",
                        "1886:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1680,
                      "src": "1870:27:0"
                    },
                    "referencedDeclaration": 1680,
                    "src": "1870:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BlockHeader_$1680_storage_ptr",
                      "typeString": "struct EthereumDecoder.BlockHeader"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1869:43:0"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "1942:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "1934:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1934:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1933:14:0"
            },
            "scope": 249,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 201,
            "nodeType": "FunctionDefinition",
            "src": "2004:165:0",
            "body": {
              "id": 200,
              "nodeType": "Block",
              "src": "2112:57:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 197,
                        "name": "header",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "2157:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                          "typeString": "struct EthereumDecoder.BlockHeader memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                          "typeString": "struct EthereumDecoder.BlockHeader memory"
                        }
                      ],
                      "expression": {
                        "id": 195,
                        "name": "EthereumDecoder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3110,
                        "src": "2125:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EthereumDecoder_$3110_$",
                          "typeString": "type(library EthereumDecoder)"
                        }
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2141:15:0",
                      "memberName": "getBlockRlpData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1958,
                      "src": "2125:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_BlockHeader_$1680_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct EthereumDecoder.BlockHeader memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2125:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 194,
                  "id": 199,
                  "nodeType": "Return",
                  "src": "2118:46:0"
                }
              ]
            },
            "functionSelector": "d76f7f0d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBlockRlpData",
            "nameLocation": "2013:15:0",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "header",
                  "nameLocation": "2064:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2029:41:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                    "typeString": "struct EthereumDecoder.BlockHeader"
                  },
                  "typeName": {
                    "id": 189,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 188,
                      "name": "EthereumDecoder.BlockHeader",
                      "nameLocations": [
                        "2029:15:0",
                        "2045:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1680,
                      "src": "2029:27:0"
                    },
                    "referencedDeclaration": 1680,
                    "src": "2029:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BlockHeader_$1680_storage_ptr",
                      "typeString": "struct EthereumDecoder.BlockHeader"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2028:43:0"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2106:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 201,
                  "src": "2093:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2093:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2092:19:0"
            },
            "scope": 249,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 216,
            "nodeType": "FunctionDefinition",
            "src": "2173:183:0",
            "body": {
              "id": 215,
              "nodeType": "Block",
              "src": "2279:77:0",
              "statements": [
                {
                  "id": 214,
                  "nodeType": "UncheckedBlock",
                  "src": "2285:67:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 211,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "2340:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 209,
                            "name": "EthereumDecoder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3110,
                            "src": "2310:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_EthereumDecoder_$3110_$",
                              "typeString": "type(library EthereumDecoder)"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2326:13:0",
                          "memberName": "toBlockHeader",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2234,
                          "src": "2310:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_BlockHeader_$1680_memory_ptr_$",
                            "typeString": "function (bytes memory) pure returns (struct EthereumDecoder.BlockHeader memory)"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2310:35:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                          "typeString": "struct EthereumDecoder.BlockHeader memory"
                        }
                      },
                      "functionReturnParameters": 208,
                      "id": 213,
                      "nodeType": "Return",
                      "src": "2303:42:0"
                    }
                  ]
                }
              ]
            },
            "functionSelector": "e7617bf8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toBlockHeader",
            "nameLocation": "2182:13:0",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2209:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "2196:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2195:19:0"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "header",
                  "nameLocation": "2271:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 216,
                  "src": "2236:41:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BlockHeader_$1680_memory_ptr",
                    "typeString": "struct EthereumDecoder.BlockHeader"
                  },
                  "typeName": {
                    "id": 206,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 205,
                      "name": "EthereumDecoder.BlockHeader",
                      "nameLocations": [
                        "2236:15:0",
                        "2252:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1680,
                      "src": "2236:27:0"
                    },
                    "referencedDeclaration": 1680,
                    "src": "2236:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BlockHeader_$1680_storage_ptr",
                      "typeString": "struct EthereumDecoder.BlockHeader"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2235:43:0"
            },
            "scope": 249,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 230,
            "nodeType": "FunctionDefinition",
            "src": "2360:148:0",
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "2459:49:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 226,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "2498:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 224,
                        "name": "EthereumDecoder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3110,
                        "src": "2472:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EthereumDecoder_$3110_$",
                          "typeString": "type(library EthereumDecoder)"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2488:9:0",
                      "memberName": "toAccount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3100,
                      "src": "2472:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_Account_$1689_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (struct EthereumDecoder.Account memory)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2472:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$1689_memory_ptr",
                      "typeString": "struct EthereumDecoder.Account memory"
                    }
                  },
                  "functionReturnParameters": 223,
                  "id": 228,
                  "nodeType": "Return",
                  "src": "2465:38:0"
                }
              ]
            },
            "functionSelector": "b3dd6a0a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toAccount",
            "nameLocation": "2369:9:0",
            "parameters": {
              "id": 219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 218,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2392:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2379:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 217,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2379:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2378:19:0"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2450:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2419:38:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Account_$1689_memory_ptr",
                    "typeString": "struct EthereumDecoder.Account"
                  },
                  "typeName": {
                    "id": 221,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 220,
                      "name": "EthereumDecoder.Account",
                      "nameLocations": [
                        "2419:15:0",
                        "2435:7:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1689,
                      "src": "2419:23:0"
                    },
                    "referencedDeclaration": 1689,
                    "src": "2419:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Account_$1689_storage_ptr",
                      "typeString": "struct EthereumDecoder.Account"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2418:40:0"
            },
            "scope": 249,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 239,
            "nodeType": "FunctionDefinition",
            "src": "2512:759:0",
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "2588:683:0",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2603:664:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2611:18:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2624:4:0",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2618:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2618:11:0"
                        },
                        "variableNames": [
                          {
                            "name": "out",
                            "nodeType": "YulIdentifier",
                            "src": "2611:3:0"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2636:20:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "b",
                              "nodeType": "YulIdentifier",
                              "src": "2654:1:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2648:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2648:8:0"
                        },
                        "variables": [
                          {
                            "name": "lenB",
                            "nodeType": "YulTypedName",
                            "src": "2640:4:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2741:386:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "out",
                                        "nodeType": "YulIdentifier",
                                        "src": "2979:3:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2988:4:0",
                                            "type": "",
                                            "value": "0x20"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2998:1:0",
                                                "type": "",
                                                "value": "1"
                                              },
                                              {
                                                "name": "i",
                                                "nodeType": "YulIdentifier",
                                                "src": "3001:1:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nodeType": "YulIdentifier",
                                              "src": "2994:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2994:9:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2984:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2984:20:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2975:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2975:30:0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3019:3:0",
                                                "type": "",
                                                "value": "240"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "b",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "3034:1:0"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "3041:4:0",
                                                            "type": "",
                                                            "value": "0x20"
                                                          },
                                                          {
                                                            "name": "i",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "3047:1:0"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3037:3:0"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3037:12:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3030:3:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3030:20:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3024:5:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3024:27:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nodeType": "YulIdentifier",
                                              "src": "3015:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3015:37:0"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3054:2:0",
                                            "type": "",
                                            "value": "16"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mod",
                                          "nodeType": "YulIdentifier",
                                          "src": "3011:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3011:46:0"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3063:1:0",
                                            "type": "",
                                            "value": "4"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3070:6:0",
                                                "type": "",
                                                "value": "0x0f00"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3082:3:0",
                                                    "type": "",
                                                    "value": "240"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "b",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "3097:1:0"
                                                          },
                                                          {
                                                            "arguments": [
                                                              {
                                                                "kind": "number",
                                                                "nodeType": "YulLiteral",
                                                                "src": "3104:4:0",
                                                                "type": "",
                                                                "value": "0x20"
                                                              },
                                                              {
                                                                "name": "i",
                                                                "nodeType": "YulIdentifier",
                                                                "src": "3110:1:0"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "add",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "3100:3:0"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "3100:12:0"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "3093:3:0"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "3093:20:0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3087:5:0"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "3087:27:0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3078:3:0"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3078:37:0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "3066:3:0"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3066:50:0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3059:3:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3059:58:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3007:3:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3007:111:0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore8",
                                  "nodeType": "YulIdentifier",
                                  "src": "2967:7:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2967:152:0"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2967:152:0"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2699:1:0"
                            },
                            {
                              "name": "lenB",
                              "nodeType": "YulIdentifier",
                              "src": "2702:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "2696:2:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2696:11:0"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "2708:32:0",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2718:14:0",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2727:1:0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2730:1:0",
                                    "type": "",
                                    "value": "2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2723:3:0"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2723:9:0"
                              },
                              "variableNames": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2718:1:0"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "2667:28:0",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2677:10:0",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2686:1:0",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2681:1:0",
                                  "type": ""
                                }
                              ]
                            }
                          ]
                        },
                        "src": "2663:464:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3134:26:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "lenB",
                              "nodeType": "YulIdentifier",
                              "src": "3152:4:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3158:1:0",
                              "type": "",
                              "value": "2"
                            }
                          ],
                          "functionName": {
                            "name": "div",
                            "nodeType": "YulIdentifier",
                            "src": "3148:3:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3148:12:0"
                        },
                        "variables": [
                          {
                            "name": "lenOut",
                            "nodeType": "YulTypedName",
                            "src": "3138:6:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "out",
                              "nodeType": "YulIdentifier",
                              "src": "3174:3:0"
                            },
                            {
                              "name": "lenOut",
                              "nodeType": "YulIdentifier",
                              "src": "3179:6:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3167:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3167:19:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3167:19:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3200:4:0",
                              "type": "",
                              "value": "0x40"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "out",
                                  "nodeType": "YulIdentifier",
                                  "src": "3210:3:0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3219:4:0",
                                      "type": "",
                                      "value": "0x20"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3229:1:0",
                                          "type": "",
                                          "value": "5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3236:1:0",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "lenOut",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3243:6:0"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "3251:4:0",
                                                  "type": "",
                                                  "value": "0x1f"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3239:3:0"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3239:17:0"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "3232:3:0"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3232:25:0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "3225:3:0"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3225:33:0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3215:3:0"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3215:44:0"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3206:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3206:54:0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3193:6:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3193:68:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3193:68:0"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 232,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2654:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 232,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3034:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 232,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3097:1:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2611:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2979:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3174:3:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 235,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3210:3:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 237,
                  "nodeType": "InlineAssembly",
                  "src": "2594:673:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeEveryTwo",
            "nameLocation": "2521:14:0",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "2549:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "2536:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2536:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2535:16:0"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "out",
                  "nameLocation": "2583:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "2570:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2569:18:0"
            },
            "scope": 249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 248,
            "nodeType": "FunctionDefinition",
            "src": "3275:140:0",
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "3351:64:0",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3366:45:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3374:31:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3394:5:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3401:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3390:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3390:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3384:5:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3384:21:0"
                        },
                        "variableNames": [
                          {
                            "name": "result",
                            "nodeType": "YulIdentifier",
                            "src": "3374:6:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 244,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3374:6:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 241,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3394:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 246,
                  "nodeType": "InlineAssembly",
                  "src": "3357:54:0"
                }
              ]
            },
            "functionSelector": "bfe370d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bytesToBytes32",
            "nameLocation": "3284:14:0",
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3312:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "3299:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3299:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3298:20:0"
            },
            "returnParameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "3343:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "3335:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3335:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3334:16:0"
            },
            "scope": 249,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "iProver",
              "nameLocations": [
                "108:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1560,
              "src": "108:7:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "108:7:0"
          }
        ],
        "canonicalName": "Prover",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          249,
          1560
        ],
        "name": "Prover",
        "nameLocation": "98:6:0",
        "scope": 250,
        "usedErrors": []
      }
    ]
  },
  "id": 0
}
